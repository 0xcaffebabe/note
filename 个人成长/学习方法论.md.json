{"name":"学习方法论","id":"个人成长-学习方法论","content":"# 学习方法论\n\n```mermaid\nstateDiagram-v2\n  利用人性 --> 克服人性\n  克服人性 --> 达成目标\n  达成目标 --> 利用人性\n```\n\n## 输入\n\n### 文档/书籍\n\n- 博客/公众号\n- 框架使用图书\n- 语言核心图书\n- 框架源码文档\n- 语言规范、语言源码\n- 计算机专业基础\n\n越往底层信息密度越大，准确性越高，参考价值越大\n\n### 视频\n\n视频对初学者来说帮助挺大的。\n\n但到了一些阶段，视频讲解速度对于有基础的人来说过慢，而且进阶的免费视频也较少\n\n到这个时候，看视频就不能再只关注视频本身的知识点，而是多关注诸如作者的编码，作者的思想等内容\n\n### 源码\n\n以思考为主，从设计者的角度来读源码\n\n#### 目的\n\n读源码之前要确定目的，不然就是走马观花，没有收获\n\n#### 思路\n\n- 从设计者的角度来读源码\n- 先整体后局部\n- 先手册后源码\n  - 如果连使用都不会就直接去学习源码，是一种非常不理智的行为\n- 由易到难\n- 带着问题读源码\n  - 了解项目的背景，项目的功能\n  - 写代码时遇到问题进行读源码\n  - 看issue\n  - 看错误堆栈信息\n- 通过源码的单测来学习\n- 通过demo\n\n#### 技巧\n\n- 自己实现一个简易版的框架，跟着问题去探索源码\n- 寻找源码的入口\n- 阅读时重视变量、函数的命名\n- 阅读时参考源码里的注释\n- 关注类层次结构\n\n### 专栏\n\n专栏相对于博客公众号的好处在于知识的系统性较强\n\n### 公众号/博客\n\n选择公众号或者博客需要注意甄别，抱着怀疑的态度\n\n### 线下大会\n\n这种大会一般不会涉及到太过技术细节的内容，通过在这种大会上，可以去了解对于一些新技术，大公司们是怎么落地的，以及大公司们遇到的一些技术挑战及他们现在的系统架构，对于开拓眼界，还是挺有帮助的\n\n## 知识管理\n\n```mermaid\nstateDiagram-v2\n  非结构化知识 --> 结构化知识: 知识管理\n  结构化知识 --> 结构化知识: 应用\n  结构化知识 --> 能力: 输出\n```\n\n### 脑图\n\n一种树形结构图，可以层层深入，不断递归，能以结构化的方式从整体到部分表达知识\n\n### 知识关系图\n\n一种图数据结构，重点表示不同知识点之间的关联\n\n### 根据遗忘曲线复习\n\n除了根据知识的最后更新时间，要定时复习知识外\n\n还要即使淘汰掉过期的知识\n\n## 输出\n\n一昧的输入，时间久了，没有输出只会造成知识不断衰减\n\n输出是巩固记忆、形成体系的一种手段\n\n### 推演验证\n\n根据文档、使用体验来反推实现方式，然后与实际实现作对比\n\n### 教\n\n费曼学习法，以教促学\n\n### PDAC循环\n\n```mermaid\nstateDiagram-v2\n  行动 --> 计划\n  计划 --> 做\n  做 --> 检查\n  检查 --> 行动\n  note right of 行动\n    形成报告，做下轮计刻从而找到仍存在的问题\n    根据跟进和效果进行调整\n  end note\n  note right of 计划\n    评估当前代况，选择一个问题。记录原因以供选择问题\n  end note\n  note right of 做\n    确定根本原因。选择潜在解快方案并实施\n  end note\n  note right of 检查\n    评估解决方案的效果，在最高层次上进行防错形成标准程序\n  end note\n```\n\n很多人学习时更喜欢做更多试卷给自己带来的虚假成就感，而不是珍惜错题给自己带来的价值\n\n","metadata":"tags: ['方法论', '软技能']","hasMoreCommit":false,"totalCommits":1,"commitList":[{"date":"2024-04-02T19:54:49+08:00","author":"MY","message":"📦学习方法论","hash":"d4f6d9a3713a8c24905a8673db8d118596d65d30"}],"createTime":"2024-04-02T19:54:49+08:00"}