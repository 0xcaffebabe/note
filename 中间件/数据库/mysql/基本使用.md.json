{"name":"基本使用","id":"中间件-数据库-mysql-基本使用","content":"# 基本使用\n\n## SQL 模式\n\n- STRICT_ALL_TABLES 和 STRICT_TRANS_TABLES：\n- TRADITIONAL\n- ANSI_QUOTES\n  - 告诉服务器把双引号是识别为标识符引用字符\n- PIPES_AS_CONCAT\n  - 将 || 当做连接运算符\n- ANSI\n  - 启动多种组合模式\n\n设置模式：\n\n```sh\nmysql ... --sql-model=\"xxx\"\n```\n\n```sql\nSET sql_mode='xx'\nSET GLOBAL sql_mode='xx' -- 全局模式\n```\n\n## 标识符与命名\n\n不加双引号的标识符：\n\n大小写字母 数字 美元符号 下划线组成 可以以数字开头 没有引号的命名不能全由数字构成\n\n如果启用了 IGNORE_SPACE 模式 函数名会变成保留字\n\n标识符的最大长度为64个字符 别名最大长度256字符\n\n完全限定表名与完全限定列名：db.table.column\n\n## 大小写规则\n\n- SQL 关键字与和函数名，存储过程的名字不区分大小写\n- 数据库名 表名 视图名区分大小写取决于操作系统\n- 列名、索引名不区分\n- 别名区分\n- 字符串区分大小写取决于是否是二进制串\n\n为避免出现问题，统一采用小写\n\n## 字符集与校对规则\n\n字符集指的是一种从二进制编码到某类字符符号的映射。校对规则则是指某种字符集下的排序规则。MySQL中每一种字符集都会对应一系列的校对规则\n\nMySQL采用的是类似继承的方式指定字符集的默认值，每个数据库以及每张数据表都有自己的默认值，他们逐层继承。比如：某个库中所有表的默认字符集将是该数据库所指定的字符集（这些表在没有指定字符集的情况下，才会采用默认字符集）\n\n```sql\nSHOW CHARSET -- 列出可用字符集\n```\n\nunicode支持：utf8 utf8mb4\n\n## 数据库操作\n\n```sql\nUSE db; -- 切换数据库\nCREATE DATABASE [IF NOT EXISTS] db [CHARSET xx] [COLLATE xxx]; -- 创建数据库\nDROP DATABASE db; -- 删除数据库\nALTER DATABASE db [CHARSET xx] [COLLATE xxx]; -- 更改字符集与排序规则\n```\n\n## 表操作\n\n```sql\nCREATE TABLE [IF NOT EXISTS] (..) ENGINE = xxx DEFAULT CHARSET = xxx; -- 创建\nALTER TABLE (..) ENGINE = xxx DEFAULT CHARSET = xxx; -- 修改\nCREATE TEMPORARY TABLE table (...); -- 临时表 会话关闭丢失\nCREATE TABLE table LIKE xxx -- 复制其他表的结构\nCREATE TABLE table SELECT ... -- 复制查询的数据 一些列的属性不会被复制\n\nCREATE TABLE tr (id INT, name VARCHAR(50), purchased DATE)\nPARTITION BY RANGE( YEAR(purchased) ) (\n    PARTITION p0 VALUES LESS THAN (1990),\n    PARTITION p1 VALUES LESS THAN (1995),\n    PARTITION p2 VALUES LESS THAN (2000)\n); -- 分区表\n\nDROP TABLE [IF EXISTS] tb; -- 删除表\n\nALTER TABLE tb CHANGE cname cname INT; -- 改变列名并修改列类型\nALTER TABLE tb ENGINE = xxx; -- 更改存储引擎\nALTER TABLE tb RENAME TO tb1; -- 表重命名\n```\n\n### 索引\n\n![屏幕截图 2020-08-24 150159](/assets/屏幕截图%202020-08-24%20150159.png)\n\n除了 PRIMARY KEY ,绝大部分索引可以使用CREATE IDNEX创建\n\n```sql\nCREATE UNIQUE INDEX name ON table (...); -- 唯一索引 单列中不允许有重复值出现\nCREATE FULLTEXT INDEX name ON table (...); -- 全文索引\nCREATE SPATIAL INDEX name ON table (...); -- myisam 空间索引\n\nCREATE TABLE (\n  ...\n  INDEX (name(10)) -- 对字符串前10个字符简历索引\n)\n\nDROP INDEX name ON tb; --删除索引\n```\n\n## 获取数据库元数据\n\nshow语句：\n\n可以使用 LIKE 'xx' 限制输出范围\n\n```sql\nSHOW DATABASES;\nSHOW CREATE DATABASE db; -- 显示创建数据库时的语句\n\nSHOW CREATE TABLE tb;\nSHOW TABLES;\nSHOW TABLE STATUS;\n\nSHOW COLUMNS FROM tb;\nSHOW INDEX FROM tb;\n```\n\nINFORMATION_SCHEMA 库\n\n## 事务处理\n\n默认是开启执行SQL自动提交的\n\n```sql\nSET AUTOCOMMIT = 0; -- 关闭自动提交\nSTART TRANSACTION; -- 开启事务\nINSERT INTO person SET name = 'cxk'; -- 执行事务操作\nCOMMIT; -- 提交事务\n-- ROLLBACK; 回滚事务\n```\n\n事务保存点\n\n```sql\nSTART TRANSACTION;\ninsert into person SET name = 'cxkk';\nSAVEPOINT myp; -- 保存一个事务点\ninsert into person SET name = 'cxkd';\nROLLBACK TO SAVEPOINT myp; -- 回滚到事务保存点\nCOMMIT;\n```\n\n### 事务隔离\n\n设置隔离级别：`SET [GLOBAL, SESSION] TRANSACTION ISOLATION LEVEL`\n\n在同一个事务中混合使用不同的存储引擎是不可靠的，有的存储引擎不支持事务\n\n隔离级别的选择：\n\n- 上松下严：应用层来适配数据库的隔离级别\n- 当Spring开启了事务并设置了传播机制，那么会覆盖Mysql已有的事务隔离级别。如果Mysql不支持该隔离级别，Spring的事务就也不会生效。\n- RR （可重复读）RD（读已提交） 搭配使用\n\n## 外键\n\n```sql\nCREATE TABLE tb(\n  ..\n  FOREIGN KEY (id) REFERENCES parent (id)\n    ON DELETE CASCADE -- 删除父表相关行 子表也会被删除\n    ON UPDATE CASCADE -- 更新相关\n    -- ON DELETE SET NULL 删除时将相关列设置NULL\n)\n```\n\n## 全文搜索\n\n- 自然语言搜索\n  -  搜索字符串会被解析成单词进行搜索\n- 布尔模式搜索\n  - 搜索出现某些单词的行\n- 查询扩展搜索\n  - 先进行自然语言搜索\n  - 第二阶段将搜索字符串与第一阶段的结果进行拼接后搜索\n\n特点：\n\n- 需要建立全文索引\n- 会忽略常见词\n  - 至少在一半的行都出现过的词\n- 忽略内置常用词\n  - after the\n- 忽略过短的单词\n\n使用：\n\n```sql\nCREATE FULLTEXT INDEX index_actor_info ON actor_test(film_info); -- 创建相关全文索引\nselect * from actor_test where match(film_info) against('LUKE'); -- 自然语言搜索\nselect * from actor_test where match(film_info) against('LUKE CHISUM' IN BOOLEAN MODE); -- 布尔模式\nselect * from actor_test where match(film_info) against('LUKE CHISUM' WITH QUERY EXPANSION); -- 查询扩展\n```\n\n配置：\n\n```ini\nft_min_word_len=3 # 最小单词长度\n```","metadata":"","hasMoreCommit":false,"totalCommits":3,"commitList":[{"date":"2021-07-06T21:02:03+08:00","author":"MY","message":"✏更新 MySQL 隔离级别","hash":"ac2496a7fa69c679bbf479e623fb7b5d742031bd"},{"date":"2020-08-25T13:38:03+08:00","author":"MY","message":"✏更新 mysql","hash":"b3d04831de7705ad9eafd187b455a57eb3e82c0d"},{"date":"2020-08-24T15:34:56+08:00","author":"MY","message":"✏更新 mysql","hash":"b94b9491ad96394d389cf8b9e510fbc6a63a2644"}],"createTime":"2020-08-24T15:34:56+08:00"}