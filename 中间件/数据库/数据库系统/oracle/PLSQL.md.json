{"name":"PLSQL","id":"中间件-数据库-数据库系统-oracle-PLSQL","content":">PLSQL是Oracle对sql语言的过程化扩展，指在SQL命令语言中增加了过程处理语句（如分支、循环等），使SQL语言具有过程处理能力。把SQL语言的数据操纵能力与过程语言的数据处理能力结合起来，使得PLSQL面向过程但比过程语言简单、高效、灵活和实用\n\n# 定义变量\n\n```sql\ndeclare\n  i number(2) :=10;\nbegin\n  dbms_output.put_line(i);\nend;\n```\n\n- 查询语句赋值\n\n```sql\ndeclare\n  ena emp.ename%type;\nbegin\n  select ename into ena from emp where empno = 7788;\n  dbms_output.put_line(ena);\nend;\n```\n\n# 分支语句\n\n```sql\ndeclare\n  age number(2) := 55;\nbegin\n  if age < 18 then\n    dbms_output.put_line('未成年');\n  elsif age>18 and age <40 then\n    dbms_output.put_line('中年');\n  else\n    dbms_output.put_line('老年');\n  end if;\n    \nend;\n```\n\n# 循环\n\n- while循环\n\n```sql\ndeclare\n  i int := 1;\nbegin\n  while i<11 loop\n        dbms_output.put_line(i);\n        i := i+1;\n  end loop;\nend;\n```\n\n- exit循环\n\n```sql\ndeclare\n  i int := 1;\nbegin\n  loop\n    exit when i>10;\n    dbms_output.put_line(i);\n    i:= i+1;\n  end loop;\nend;\n```\n\n- for循环\n\n```sql\ndeclare\n  i int := 1;\nbegin\n  for i in 1..10 loop\n    dbms_output.put_line(i);\n  end loop;\nend;\n```\n\n# 游标\n\n```sql\ndeclare\n  cursor c is select * from emp;\n  empr emp%rowtype;\nbegin\n  open c;\n       loop\n         fetch c into empr;\n         exit when c%notfound;\n         dbms_output.put_line(empr.ename);\n       end loop;\n  \n  close c;\nend;\n```\n\n# 存储过程\n\n- 定义\n\n```sql\ncreate or replace procedure p(eno emp.empno%type)\nis\n\nbegin\n  dbms_output.put_line(eno);\nend;\n```\n\n- 调用\n\n```sql\nbegin\n  p(15);\nend;\n```\n\n# 存储函数\n\n- 定义\n\n```sql\ncreate or replace function f(eno emp.empno%type) return number\nis\n       s number(10);\nbegin\n  select sal*12+nvl(comm,0) into s  from emp where empno = eno;\n  return s;\nend;\n```\n\n- 使用\n\n```sql\ndeclare\n  s number(10);\nbegin\n  s := f(7788);\n  dbms_output.put_line(s);\nend;\n```\n\n# out参数\n\n类似引用变量\n\n# 存储函数与存储过程\n\n>一般来讲，过程和函数的区别在于函数可以有一个返回值；而过程没有返回值。\n但过程和函数都可以通过out指定一个或多个输出参数。我们可以利用out参数，在过程和函数中实现返回多个值。\n\n# 触发器\n\n- 语句级触发器\n\n```sql\ncreate or replace trigger t\nafter\ninsert on person\ndeclare\nbegin\n       dbms_output.put_line('插入操作');\nend;\n```\n\n- 行级触发器\n\n```sql\ncreate or replace trigger addsal4p \nbefore update of sal on myemp \nfor each row \nbegin \nif :old.sal >= :new.sal then \n    raise_application_error(-20002, '涨前的工资不能大于涨后的工资'); \nend if; \nend;\n```\n\n# java调用\n\n```java\n        Class.forName(\"oracle.jdbc.driver.OracleDriver\");\n\n        Connection connection = DriverManager.getConnection(\"jdbc:oracle:thin:@127.0.0.1:1521:orcl\", \"scott\", \"tiger\");\n\n        /*查询*/\n        ResultSet resultSet = connection.prepareStatement(\"SELECT * FROM emp\").executeQuery();\n        while (resultSet.next()){\n            System.out.println(resultSet.getString(\"ename\"));\n        }\n\n        /*调用存储过程*/\n        CallableStatement callableStatement = connection.prepareCall(\"(call p1(?))\");\n        callableStatement.registerOutParameter(1, OracleTypes.NUMBER);\n        callableStatement.execute();\n        System.out.println(callableStatement.getObject(1));\n\n        /*调用存储函数*/\n        callableStatement = connection.prepareCall(\"(? = call f(?))\");\n        callableStatement.setInt(2,7788);\n        callableStatement.registerOutParameter(1, OracleTypes.NUMBER);\n\n        callableStatement.execute();\n        System.out.println(callableStatement.getObject(1));\n        connection.close();\n```\n","metadata":"","hasMoreCommit":false,"totalCommits":3,"commitList":[{"date":"2021-09-07T10:20:40+08:00","author":"cjiping","message":"📦整理 数据库系统","hash":"9393f69385d1ab5b1256f9f1c9603ce3fe0a5dcc"},{"date":"2019-08-25T12:12:46+08:00","author":"My、","message":"20190825上午","hash":"16db0438cae34887f1eee74fd68e9fa955d1c84f"},{"date":"2019-08-23T16:54:55+08:00","author":"My、","message":"20190823下午","hash":"d5a2ef7586f6bf1331f9421be0dbb1fa93dbb82f"}],"createTime":"2019-08-23T16:54:55+08:00"}