{"name":"时序逻辑电路","id":"数字逻辑电路-时序逻辑电路","content":"# 时序逻辑电路\n\n电路在任何时候的输出稳定值，不仅与该时刻的输入信号有关，而且与该时刻以前的电路状态有关；电路结构具有反馈回路\n\n![批注 2020-02-17 163256](/assets/批注%202020-02-17%20163256.png)\n\n解决了：\n\n1. 自动运行的问题。时序电路接通之后可以不停地开启和关闭开关，进入一个自动运行的状态\n2. 存储的问题。通过时序电路实现的触发器，能把计算结果存储在特定的电路里面\n3. 解决了各个功能按照时序协调的问题，使得不同的事件按照时间顺序发生\n\n## 存储电路\n\n存储电路由存储器件组成，能存储一位二值信号的存储器件称为存储单元电路。存储单元电路大多是双稳态电路\n\n- 锁存器\n- 触发器\n\n## 分类\n\n按存储电路中存储单元状态改变的特点分类\n\n- 同步时序电路\n- 异步时序电路\n\n按输出信号的特点分类\n\n米里(Mealy)型: 输出信号不仅仅取决于存储电路的状态，而且还取决于外部输入信号\n\n摩尔(Moore)型: 输出信号仅仅取决于存储电路的状态，而和该时刻的外部输入信号无关\n\n按逻辑功能分类\n\n- 计数器\n- 寄存器\n- 移位寄存器 \n\n### 时钟硬件\n\n![开关 A 闭合（也就是相当于接通电路之后），开关 B 就会不停地在开和关之间切换，生成对应的时钟信号](/assets/202262820495.webp)\n\n### RS锁存器\n\n- 或非门构造的锁存器\n\n![批注 2020-02-17 163747](/assets/批注%202020-02-17%20163747.png)\n\n- 与非门\n\n![批注 2020-02-17 165107](/assets/批注%202020-02-17%20165107.png)\n\n- SD —置位端(置1端)\n- RD —复位端(置0端)\n\n### 门控锁存器\n\n![批注 2020-02-17 165257](/assets/批注%202020-02-17%20165257.png)\n\n- 当C=1时: 门控RS锁存器功能和RS锁存器完全相同\n- 当C=0时: RD=SD=0，锁存器状态保持不变\n\n### 门控 D 锁存器\n\n![批注 2020-02-17 165510](/assets/批注%202020-02-17%20165510.png)\n\n- 当C=0时，RD=SD=1，电路处于保持状态;\n- 当C=1时，RD=D, SD=D，电路的新状态为D\n\n### 触发器\n\n利用“时钟”的特殊定时控制信号去限制存储单元状态的改变时间,具有这种特点的存储单元电路称为触发器（FF：Flip-Flop）\n\n#### 边沿D触发器\n\n![批注 2020-02-17 185036](/assets/批注%202020-02-17%20185036.png)\n\n#### 负边沿JK触发器\n\n![批注 2020-02-17 185637](/assets/批注%202020-02-17%20185637.png)\n\n#### 触发器脉冲工作特性\n\n- 建立时间\n\n为使触发器做好触发准备，要求输入信号在时钟脉冲的边沿到来之前，提前一段时间到来，提前的这段时间叫建立时间，用tset表示。\n\n![批注 2020-02-17 190849](/assets/批注%202020-02-17%20190849.png)\n\n- 保持时间\n\n为了保证触发器可靠翻转，在时钟脉冲到达后，输入信号必须维持一段时间不变。这段时间称为保持时间，用th表示\n\n![批注 2020-02-17 190923](/assets/批注%202020-02-17%20190923.png)\n\n- 传输延迟时间\n\n从时钟脉冲边沿到触发器的新状态稳定建立起来，所需要的时间叫做传输延迟时间\n\n- 最高时钟频率\n\n在保证触发器可靠翻转的条件下， 所允许的时钟频率有一个上限值 （最高频率） ，该上限值即为触发器的最高时钟频率，用fmax表示\n\n#### 锁存器应用\n\n- 消颤开关\n\n#### 触发器应用\n\n- 单脉冲发生器\n\n#### PC寄存器实现\n\n![2022628205741](/assets/2022628205741.webp)\n\n## 同步时序电路\n\n### 分析\n\n只要知道了在当前状态下各触发器的输入（即驱动信号），就能根据触发器的特性方程，求得电路的下一个状态，最终找到电路的状态转换规律\n\n### 设计\n\n- 根据逻辑功能要求，建立原始状态表或原始状态图;\n- 利用状态化简技术，简化原始状态表，消去多余状态;\n- 状态分配或状态编码，即将简化后的状态用二进制\n代码表示;\n- 选择触发器类型，并根据编码后的状态表求出驱动方程和输出方程;\n- 检查自启动性, 若所设计电路中存在无效状态, 则必须检查电路能否自启动, 如果不能自启动, 则需修改设计;\n- 画出逻辑图。","metadata":"","hasMoreCommit":false,"totalCommits":2,"commitList":[{"date":"2022-06-28T21:02:52+08:00","author":"MY","message":"✏️更新 计算机系统","hash":"21d96b6c47754215fb109c200a578f9968361e94"},{"date":"2020-02-17T19:54:25+08:00","author":"MY","message":"增加时序逻辑电路","hash":"f25749400cf0805136932d64b57199f020420dbb"}],"createTime":"2020-02-17T19:54:25+08:00"}