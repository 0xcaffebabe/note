{"name":"数据架构","id":"数据技术-数据架构","content":"# 数据架构\n\n从数据存储模式、时效性和分布模式三个架构设计和数据建模视角描述做什么，怎么做。\n\n数据架构的本质，是在**数据量、时效性、成本、安全与维护性**之间找到平衡。  \n一个典型的大数据系统从目标、取舍到分层，都体现出对这些因素的系统性思考。\n\n---\n\n## 设计目标与架构哲学\n\n设计数据系统前，需要先明确目标：\n\n1. **数据类型**：系统需支持结构化数据（数据库、日志）与非结构化数据（视频、图片、文本等）。  \n2. **数据量**：应具备 TB～PB 级水平扩展能力，能够以分布式架构应对增长。  \n3. **时效性**：既能支持离线分析，也能支持实时或准实时处理（秒级甚至毫秒级）。  \n4. **成本控制**：优先采用开源方案，兼顾性能与硬件成本。  \n5. **安全与隐私**：从系统设计阶段就内嵌安全机制，遵循 GDPR、个保法等法规。  \n6. **可维护性**：强化元数据、血缘、监控与调度，确保系统长期可持续运行。\n\n这些目标决定了系统的整体取舍方向：  \n> 业务需求决定产品设计，产品设计决定技术选型，而技术选型的约束会反过来影响业务实现。\n\n---\n\n## 技术取舍与系统平衡\n\n任何大数据架构的设计，都是在以下几方面的平衡中达成的：\n\n1. **一致性 vs 可用性 vs 分区容错性（CAP）**  \n   大数据系统通常优先保证可用性与分区容错性（AP 系统），采用最终一致性策略。\n\n2. **批处理 vs 流处理**  \n   批处理高吞吐、流处理低延迟。  \n   现代系统通常采用**流批一体**架构，在一套逻辑下同时兼顾实时与离线计算。\n\n3. **OLTP vs OLAP**  \n   大数据系统以 OLAP 为主，使用列式存储（如 ClickHouse、Doris）提升分析性能。\n\n4. **数据质量 vs 处理速度**  \n   主干流程优先保证处理速度，旁路进行高质量校验与治理。\n\n5. **性能 vs 成本**  \n   在 SSD、对象存储、弹性计算等资源配置中动态权衡。\n\n---\n\n## 数据架构逻辑分层\n\n现代数据系统通常采用分层架构设计，从数据采集到应用形成完整链路：\n\n1. **数据源层**：  \n   包括各类结构化、半结构化与非结构化外部数据。  \n\n2. **数据采集层**：  \n   负责接入与采集数据，可通过日志代理、API 抓取、消息队列等方式实现。\n\n3. **接入与传输层**：  \n   对原始数据进行初步清洗与转换，并通过 Kafka、Pulsar 等实现高效传输。\n\n4. **数据存储层**：  \n   离线数据存储于 HDFS、对象存储；实时数据存储于 KV/内存系统。  \n   采用冷热分离、读写分离等设计以兼顾多种应用场景。\n\n5. **数据计算层**：  \n   包括批处理、流处理与流批一体架构，是数据加工与聚合的核心。  \n   在这里需要权衡时效性、成本与计算模型。\n\n6. **数据应用层**：  \n   对外提供三类接口：  \n   - **人机界面**（报表、BI、可视化）；  \n   - **系统接口**（OpenAPI）；  \n   - **智能接口**（MCP 协议，服务 AI 系统）。  \n\n7. **支撑系统层（隐含层）**：  \n   包含元数据、调度、监控、告警、安全审计等模块。\n\n---\n\n## [数据存储](/数据技术/数据存储.md)\n\n存储是整个数据架构的基石。  \n不同的数据类型、访问模式与成本约束，会影响具体的存储选型与分层设计：\n\n- **冷热数据分层存储**：高频数据在列式或内存存储中，低频数据转移至对象存储。  \n- **读写分离**：分析查询与数据写入分离，提升整体并发性能。  \n- **多模态数据支持**：为结构化与非结构化数据提供不同的索引和存储机制。\n\n---\n\n## 数据计算\n\n数据计算层是整个系统的“心脏”，承担从原始数据到结构化知识的加工。  \n根据不同的业务目标，可分为批处理、流处理与流批一体三种形态。\n\n简单来说：\n\n- **批处理**：吞吐量大、时效性低、准确性高。  \n- **流处理**：实时性强，但为保证延迟可能牺牲部分一致性。  \n- **流批一体**：兼顾吞吐与延迟，实现统一的计算逻辑与数据存储。\n\n### [批处理](/数据技术/数据处理.md#批处理)\n\n用于历史数据的离线分析与聚合，常用技术包括 Spark、Hive、Presto 等。\n\n### [流处理](/数据技术/流处理.md)\n\n用于实时数据流分析，如 Flink、Kafka Streams、Dstream 等，适合低延迟业务。\n\n### 流批一体\n\n1. **计算一体**：同一套逻辑同时适用于流与批，保证一致结果。  \n2. **存储一体**：数据在统一介质中流转，支持实时与离线混合读写。\n\n---\n\n## 数据应用\n\n数据架构的最终目的，是将数据转化为**业务洞察与智能决策能力**。  \n在向下游提供数据服务时，首要目标是**建立信任**——让使用者相信数据的真实性与可解释性。\n\n同时，需要明确：\n- 谁在使用这些数据；\n- 数据如何定义（口径、一致性）；\n- 如何提供数据服务（自助、API、定制报表）。\n\n### BI\n\n通过收集、分析和呈现数据来提供商业洞察的技术和工具。\n\n功能包括：\n\n1. 数据可视化（仪表盘、图表、报表）；  \n2. 数据分析（查询、聚合、筛选）；  \n3. 自定义报告与仪表盘；  \n4. 数据挖掘（模式发现与预测）；  \n5. 实时监控与告警。\n\n### 报表\n\n相比 BI，报表更静态、更聚焦，通常是固定模板的定期输出。  \n而 BI 则提供交互式分析和实时查询能力。\n\n### [数据分析](/数据技术/数据分析.md)\n\n#### [数据可视化](/数据技术/数据分析.md#数据可视化)\n\n### [机器学习](/数据技术/机器学习.md)\n\n---\n\n## [安全与隐私]((/计算机网络/网络安全/安全性.md))\n\n在现代大数据系统中，安全与隐私不再是附加项，而是架构设计的核心原则。\n\n### 数据权限\n\n- 访问权限：控制用户能否访问数据。  \n- 操作权限：控制用户是否能写入或修改数据。  \n- 范围权限：限定可访问的数据集范围。  \n- 行级权限：基于行的细粒度数据控制。  \n- 字段权限：控制敏感字段的可见性与脱敏处理。\n\n## 总结\n\n> 构建数据架构的关键步骤是：  \n> - 明确目标与约束；  \n> - 做出取舍与平衡；  \n> - 按逻辑分层设计；  \n> - 选用可持续的开源技术；  \n> - 持续优化与演进。  \n>  \n> 一个好的数据架构，既是技术系统，也是业务智能的基础设施。\n","metadata":"tags: ['数据技术', '大数据']","hasMoreCommit":false,"totalCommits":10,"commitList":[{"date":"2025-10-29T18:13:15+08:00","author":"MY","message":"docs(data): 完善数据架构文档内容","hash":"2e524ceee8f05e5a7eb026288ba6df56287e1fde"},{"date":"2024-06-25T20:02:32+08:00","author":"MY","message":"➕数据网格","hash":"387bcf39620ff08c85b6e200059e0bc71c6698c7"},{"date":"2024-06-13T20:20:37+08:00","author":"MY","message":"➕流处理","hash":"786031c785bbd78729c2d621ad4b0182dc9f24b7"},{"date":"2024-06-12T19:45:05+08:00","author":"MY","message":"✏数据工程","hash":"b5657fde32ae6d7136781e7a2d22a545350dedbb"},{"date":"2024-06-11T18:35:47+08:00","author":"MY","message":"➕数据存储","hash":"bcb8dc2159d46fd78b675f9b34b9de56e331e661"},{"date":"2024-06-07T16:52:43+08:00","author":"MY","message":"✏数据工程","hash":"73c5aa52aae75df6b029c35992649a51797cac80"},{"date":"2024-06-06T20:14:51+08:00","author":"MY","message":"✏数据管理","hash":"e240a53961c71bd6bd9da6148e4230826573de51"},{"date":"2024-06-05T19:47:18+08:00","author":"MY","message":"📦数据管理","hash":"691dc7a05c78b6f64162f2138915ae6a41d45304"},{"date":"2024-04-01T19:56:05+08:00","author":"MY","message":"✏数据架构","hash":"94ec5a58663fe6de89d5018fde98983b68b9e117"},{"date":"2024-03-13T20:09:20+08:00","author":"MY","message":"➕数据架构","hash":"13bcc23ee0e52466a751df6f2785f2bb7100cb95"}],"createTime":"2024-03-13T20:09:20+08:00"}