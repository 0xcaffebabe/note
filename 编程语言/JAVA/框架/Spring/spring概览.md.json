{"name":"spring概览","id":"编程语言-JAVA-框架-Spring-spring概览","content":"# Spring 概览\n\n## 关键策略\n\n- 基于POJO和最小侵入性编程\n- 通过依赖和面向接口实现松耦合\n- 基于切面和惯例进行声明式编程\n- 通过切面和模板减少样板代码\n\n## 简化JAVA开发\n\n- 依赖注入\n- 应用切面\n- 各种模板\n\n## 容纳你的Bean\n\n### 常用上下文\n\n- **AnnotationConfigApplicationContext**\n- AnnotationConfigWebApplicationContext\n- **ClassPathXmlApplicationContext**\n- **FileSystemXmlApplicationContext**\n- XmlWebApplicationContext\n\n*ApplicationContext立即加载*\n*BeanFactory延迟加载*\n\n### Spring 模块\n\n![202081181547](/assets/202081181547.png)\n\n## Spring框架的核心\n\nDI 和 AOP\n\n# 解耦\n\n- 反射\n- 工厂模式解耦\n- 控制反转-Inversion Of Control\n","metadata":"","hasMoreCommit":false,"totalCommits":8,"commitList":[{"date":"2024-11-19T16:00:12+08:00","author":"MY","message":"📦Spring","hash":"36352bf92f58df999aecc3d0a874f9d952d30fb7"},{"date":"2020-08-11T08:55:56+08:00","author":"MY","message":"✏更新 spring 概览","hash":"6ed5ec136a21f88ec21a6e463c53e714bd0ea2bf"},{"date":"2019-10-12T11:28:33+08:00","author":"MY","message":"新增计算网络与因特网一部分","hash":"33a1215ecd6d5e90c110a4c6951d6bfaeeac3c78"},{"date":"2019-08-20T12:16:26+08:00","author":"My、","message":"20190820上午","hash":"3426191d78d2a6f9b58bdad3cf6432b941eb8873"},{"date":"2019-06-22T16:27:31+08:00","author":"My","message":"20190622u","hash":"f11300a0452560a89c01d4d7da2434a9a786c3e0"},{"date":"2019-06-20T22:49:48+08:00","author":"My","message":"format something","hash":"81f933230612d2017b6562ae767e3a0046ce5fa4"},{"date":"2019-06-11T22:27:22+08:00","author":"My","message":"20190611u","hash":"493e05f14821260c2836ff7cb481c01ade46f957"},{"date":"2019-06-10T23:14:51+08:00","author":"My","message":"20190610u","hash":"58baf17b53d9ab08578ec639eccd8b45c8223cd0"}],"createTime":"2019-06-10T23:14:51+08:00"}