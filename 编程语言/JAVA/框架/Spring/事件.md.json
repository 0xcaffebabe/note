{"name":"事件","id":"编程语言-JAVA-框架-Spring-事件","content":"# 事件\n\n## 自定义事件\n\n```java\npublic class LogEvent extends ApplicationEvent {\n  ....\n}\n```\n\n## 发布事件\n\n- 获取ApplicationEventPublisher的实现类（如ApplicationContext）.publishEvent\n\n## 监听事件\n\n- 注解监听\n\n```java\n@EventListener\n@Async // 异步监听（需要开启异步配置）\npublic void accept(LogEvent event){}\n\n// 多事件监听\n@EventListener(classes = {MyEvent.class, ContextRefreshedEvent.class, ContextClosedEvent.class})\npublic void onMyEventPublished(ApplicationEvent event) {...}\n```\n\n- 编程式监听\n\n```java\npublic class LogListener implements ApplicationListener<LogEvent> {\n\n    @Async\n    @Override\n    public void onApplicationEvent(LogEvent logEvent) {\n       ...\n     }\n}\n```\n","metadata":"","hasMoreCommit":false,"totalCommits":1,"commitList":[{"date":"2021-05-31T09:21:42+08:00","author":"cjiping","message":"✏更新 Spring 事件","hash":"b8778fd33941946d7d2f621f202a6e5553f34398"}],"createTime":"2021-05-31T09:21:42+08:00"}