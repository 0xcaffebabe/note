{"name":"Angular","id":"编程语言-JavaScript-Angular","content":"# Angular\n\ncli：\n\n```sh\nnpm install -g @angular/cli\n```\n\n## 组件\n\n```ts\n// product-list.component.ts\nimport { Component } from '@angular/core';\nimport { products } from '../products';\n\n@Component({\n  selector: 'app-product-list', // 标识组件\n  // 模板及样式文件路径\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent {\n  // 可被在模板中使用的变量\n  products = products;\n\n  // 可被在模板中被调用的方法\n  share() {\n    window.alert('The product has been shared!');\n  }\n  show(name: string) {\n    window.alert('this is ' + name)\n  }\n  desory(name: string) {\n    window.alert('destory ' + name)\n  }\n}\n```\n\n```html\n<!-- product-list.component.html -->\n<h2>Products</h2>\n\n<!-- 列表渲染 -->\n<div *ngFor=\"let product of products\">\n  <h4>\n    <!-- title属性渲染 click事件绑定 -->\n    <a [title]=\"product.price\" (click)=\"show(product.name)\">{{\n      product.name\n    }}</a>\n    <!-- 条件渲染 -->\n    <p *ngIf=\"product.description\">{{ product.description }}</p>\n    <!-- 使用子组件 数据传递及事件触发 -->\n    <app-product-alerts [product]=\"product\" (notify)=\"desory(product.name)\"></app-product-alerts>\n  </h4>\n</div>\n```\n\n## 路由\n\n- 添加路径映射\n\n```ts\n// app.module.ts\n@NgModule({\n  imports: [\n    RouterModule.forRoot([\n      { path: 'product/:productId', component: ProductDetailComponent },\n    ])\n  ],\n  ....\n```\n\n- 初始化时接收参数及渲染\n\n```ts\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css']\n})\nexport class ProductDetailComponent implements OnInit {\n\n  product: string | undefined\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    const routeParams = this.route.snapshot.paramMap;\n    this.product = routeParams.get('productId')!;\n  }\n\n}\n```\n\n## 管理数据\n\n- 定义 service\n\n```ts\n// cart.service.ts\nimport { Injectable } from '@angular/core';\n\n@Injectable(\n  {providedIn: 'root'}\n)\nexport class CartService {\n\n  items: string[] = []\n\n  constructor() { }\n\n  add(item: string) {\n    this.items.push(item);\n    console.log(this.items)\n  }\n\n  getItems(): string[] {\n    return this.items\n  }\n\n}\n```\n\n- 在其他组件注入service\n\n```ts\nconstructor(\n    private route: ActivatedRoute,\n    private cartService: CartService\n) { }\n```\n\n- 在组件内使用\n\n```ts\naddToCart(){\n  this.cartService.add(this.product!)\n}\n```\n\n## 表单输入\n\n```ts\n// app.module.ts\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n@NgModule({\n  imports:      [ BrowserModule, ReactiveFormsModule ],\n  declarations: [ AppComponent],\n  bootstrap:    [ AppComponent ]\n})\n```\n```ts\nexport class AppComponent  {\n loginForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n  ...\n```\n```html\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n          <input type=\"email\" class=\"form-control\" formControlName=\"username\" required placeholder=\"username: name@example.com\">\n      </div>\n      <div class=\"form-group\">\n          <input type=\"password\" class=\"form-control\" formControlName=\"password\" required placeholder=\"password: admin123\">\n      </div>\n      <button type=\"submit\" [disabled]=\"!loginForm.valid\" class=\"btn btn-primary btn-block\">Login</button>\n</form>\n```\n","metadata":"tags: ['前端']","hasMoreCommit":false,"totalCommits":3,"commitList":[{"date":"2021-12-07T16:38:56+08:00","author":"cjiping","message":"✏️更新 Angular","hash":"0a6d10c386d9ed5ce0480e34577bf54c93c1e100"},{"date":"2021-12-06T16:49:45+08:00","author":"cjiping","message":"✏️更新 Augular","hash":"7a4bbd1bc796e6c6749baafdf5c3595548812508"},{"date":"2021-12-01T16:25:55+08:00","author":"cjiping","message":"➕新增 Angular","hash":"53622c0c6618b1fbdde05e91cdd055ce783eddb6"}],"createTime":"2021-12-01T16:25:55+08:00"}