{"name":"ES5","id":"编程语言-JavaScript-ES5","content":"# ES5\n\n## 数组方法\n\n```js\n// 遍历数组\n[1, 2, 3, 4, 5].forEach(function (v, i, a) {\n    console.log(\"index:\" + i + \",value:\" + v)\n})\n\n// 对数组中的每个元素进行操作，然后返回\nvar a = [1, 2, 3, 4, 5].map(function (v, i, a) {\n    return v = v*v;\n})\n\n// filter过滤数组\nvar a = [1, 2, 3, 4, 5].filter(function (v, i, a) {\n    return i % 2 == 0;\n})\n\n// 是否有满足条件的元素(any)\nvar flag = [1, 2, 3, 4, 5].some(function (v, i, a) {\n    // 当找到第一个满足条件的元素后，就停止循环了\n    return v < 3;\n})\n\n// 是否全部满足条件(all)\nvar flag = [1, 2, 3, 4, 5].every(function (v, i, a) {\n    return v > 0;\n})\n```\n\n## 字符串方法\n\n```js\n// 去除前后空格\n\"  das  \".trim()\n```\n\n## 对象方法\n\n```js\n// 获取对象属性名列表\nObject.keys({name:'cxk',age:'18'})\n```\n\n### Object.defineProperty\n\n```js\nObject.defineProperty(对象，修改或新增的属性名，{\n\t\tvalue:修改或新增的属性的值,\n\t\twritable:true/false,//如果值为false 不允许修改这个属性值\n\t\tenumerable: false,//enumerable 如果值为false 则不允许遍历\n        configurable: false  //configurable 如果为false 则不允许删除这个属性 属性是否可以被删除或是否可以再次修改特性\n})\t\n```\n\n```js\nvar obj = {\n    name:'cxk'\n}\nObject.defineProperty(obj,'name',{\n    \n    writable:false,\n    enumerable:true,\n    configurable:false\n})\n\nobj.name= 'jntm'; //无效\nfor (let i in obj){\n    // 无法枚举到name\n    console.log(i)\n}\n// 无法再重新修改特性\nObject.defineProperty(obj,'name',{\n    configurable:true\n})\n```","metadata":"","hasMoreCommit":false,"totalCommits":1,"commitList":[{"date":"2020-02-27T14:32:32+08:00","author":"MY","message":"JS 增加ES5部分特性","hash":"b4e8d2e53949a356dc12b61d3701101eab4ee2e2"}],"createTime":"2020-02-27T14:32:32+08:00"}