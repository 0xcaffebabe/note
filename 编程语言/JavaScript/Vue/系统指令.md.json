{"name":"系统指令","id":"编程语言-JavaScript-Vue-系统指令","content":"# 指令\n\n## v-on事件绑定\n\n- v-on:click\n\n```html\n<button v-on:click=\"fun('这是使用vue绑定的点击事件')\">vue的onclick</button>\n```\n\n```javascript\nnew Vue({\n    el:\"#app\",\n    data:{\n        message:\"hello world\"//model\n    },\n    methods:{\n        fun:function(msg){\n            //alert(msg);\n            this.message = msg;\n        }\n    }\n});\n```\n\n- v-on:keydown\n\n```html\n<input type=\"text\" v-on:keydown=\"fun($event)\">\n```\n\n- v-on:mouseover\n\n```html\n<div @mouseover=\"fun1\" id=\"div\">\n    <textarea @mouseover=\"fun2($event)\">这是一个文件域</textarea>\n</div>\n```\n\n`@mouseover == v-on:mouseover`\n\n- 事件修饰符\n\n```html\n<!-- 阻止单击事件继续传播 -->\n<a v-on:click.stop=\"doThis\"></a>\n\n<!-- 提交事件不再重载页面 -->\n<form v-on:submit.prevent=\"onSubmit\"></form>\n\n<!-- 修饰符可以串联 -->\n<a v-on:click.stop.prevent=\"doThat\"></a>\n\n<!-- 只有修饰符 -->\n<form v-on:submit.prevent></form>\n\n<!-- 添加事件监听器时使用事件捕获模式 -->\n<!-- 即元素自身触发的事件先在此处理，然后才交由内部元素进行处理 -->\n<div v-on:click.capture=\"doThis\">...</div>\n\n<!-- 只当在 event.target 是当前元素自身时触发处理函数 -->\n<!-- 即事件不是从内部元素触发的 -->\n<div v-on:click.self=\"doThat\">...</div>\n```\n\n- 按键修饰符\n\n`.enter` `.tab` `.delete` ( \"删除\" 和 \"退格\" ) `.esc` `.space` `.up` `.down` `.left` `.right` `.ctrl` `.alt` `.shift` `.meta`\n\n## 自定义指令\n\n```js\n// 定义一个全局指令\nVue.directive('focus',{\n    inserted:function(el){\n        el.focus();\n    }\n})\n// 携带参数\nVue.directive('color',{\n    inserted:function(el,bingding){\n        // 这里的value是data里面的，而不是双引号里面的\n        el.style.backgroundColor = bingding.value;\n    }\n})\n```\n\n```html\n<!-- 使用全局指令 -->\n<input type=\"text\" v-focus>\n<!-- 指令携带参数 -->\n<div style=\"height:200px\" v-color='color'></div>\n```\n\n- 局部指令\n\n```js\nvar vm = new Vue({\n  el: '#app',\n  //局部指令，需要定义在  directives 的选项\n  directives: {\n    focus: {\n      inserted: function(el) {\n        el.focus();\n      }\n    }\n  }\n});\n```","metadata":"","hasMoreCommit":false,"totalCommits":3,"commitList":[{"date":"2020-03-19T11:13:55+08:00","author":"MY","message":"增加 vue过滤器","hash":"2be5e5464bf7c300e1e7fd4042d7cc584dc69812"},{"date":"2020-02-14T21:53:58+08:00","author":"MY","message":"完成笔记结构重构","hash":"fa76a092bde3bf674471ba101d7e1d1dd2c7108b"},{"date":"2020-02-05T21:02:52+08:00","author":"MY","message":"重构vue","hash":"a5c325817abd7044d8ca02694aa967ee06969c7d"}],"createTime":"2020-02-05T21:02:52+08:00"}