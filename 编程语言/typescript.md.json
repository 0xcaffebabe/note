{"name":"typescript","id":"编程语言-typescript","content":"# typescript\n\n- ES新规范支持\n- IDE支持\n\n## 类型\n\n```ts\nvar myname: string = \"cxk\"; // 字符串\nvar alias: any = 1 // 可以是任何类型\nvar age: number = 13 // 数字类型\nvar gender: boolean = true // 布尔\n\nfunction test(name: string): void { } // 函数参数以及函数返回值\n\n// 自定义类型\nclass Person {\n    name: string\n    age: number\n}\n// 创建对象\nvar cxk = new Person()\ncxk.name = \"cxk\"\ncxk.age = 18\n```\n\n## 参数\n\n- 默认值\n\n```ts\nfunction test(a: string = \"default\") { }\n```\n\n- 可选参数\n\n```ts\n// 调用函数test时，可不传递b\nfunction test(a: string,b?: string) { }\n```\n\n- 不定项参数\n\n```ts\nfunction test(...args) { }\n```\n\n## 函数\n\n- generator\n\n```ts\nfunction* test() { \n    console.log(\"start\");\n    yield;\n    console.log(\"finish\");\n}\nvar f1 = test();\nf1.next();//输出start\nf1.next(); // 输出 finish\n```\n\n- 解构\n\n```ts\nfunction test() {\n    return {\n        pname: 'cxk',\n        age: 18\n    }\n}\nconst {pname,age} = test()\n```\n\n- 箭头函数\n\n### 安全链式调用\n\n```ts\nreturn person?.name?.firstName; // 等价于 person && person.name && person.name.firstName\n```\n\n```ts\nperson.name!; // 强制name属性不为空\n```\n\n```ts\nname? :string; // 可选属性\n```\n\n## for\n\n- for of\n\n```ts\nfor (let n of arr) {\n    // 可以用在数组、字符串、对象\n}\n```\n\n## 面向对象\n\n```ts\nclass Person {\n    name;\n    run() {\n        \n    }\n}\nconst p1 = new Person()\np1.name = \"cxk1\"\nconst p2 = new Person()\np2.name=\"cxk2\"\n```\n\n### 权限控制\n\n```ts\nprivate run() {\n        \n}\n```\n\n### 泛型\n\n```ts\nconst list: Array<String> = []\nlist[0]=\"1\" // 只能存放string\n```\n\n### 接口\n\n```ts\ninterface Runnable {\n    run();\n}\nclass Thread implements Runnable {\n    run () {}\n}\n```\n\n## 模块\n\n- 暴露\n\n```ts\nexport var prop1;\n\nexport function data () {\n  console.log('data')\n}\n\nexport class Thread{\n  run():void{\n    console.log('run')\n  }\n}\n```\n\n- 引入使用\n\n```ts\nimport {data} from './module1'\ndata()\n```","metadata":"","hasMoreCommit":false,"totalCommits":7,"commitList":[{"date":"2021-10-25T16:18:42+08:00","author":"cjiping","message":"✏更新 typescript","hash":"8e55370721b50ee3edd930b71ffdb7323b0d6889"},{"date":"2020-04-28T13:48:42+08:00","author":"MY","message":"增加 ts 模块","hash":"b37abcd8c676f659e46c435093ef76f77bd8b525"},{"date":"2020-04-28T13:43:56+08:00","author":"MY","message":"更新 ts oop","hash":"3087bd9b303d0a682651f29f033290ed973014a6"},{"date":"2020-04-27T16:02:27+08:00","author":"MY","message":"增加 ts oop","hash":"82baad183b95973ee3056744b3e57db9a7c5279a"},{"date":"2020-04-27T15:42:41+08:00","author":"MY","message":"更新 ts 函数相关","hash":"ce0b892cdadcf0c322211c5579260721e1c8bc10"},{"date":"2020-04-24T15:03:25+08:00","author":"MY","message":"更新 ts","hash":"966cdfa1962adf63d9e53f1e4e99705406d96c2c"},{"date":"2020-04-23T16:41:28+08:00","author":"MY","message":"增加 ts 类型","hash":"887ca2dac05e6d79cc51d482e7a9a671b94e84db"}],"createTime":"2020-04-23T16:41:28+08:00"}