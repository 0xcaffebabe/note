{"name":"异常控制流","id":"计算机系统-在系统上运行程序-异常控制流","content":"# 异常\n\n![202263021234](/assets/202263021234.png)\n\n异常的发生和捕捉，是在硬件层面完成的。但是异常的处理，是由软件来完成的\n\n## 异常处理\n\n**异常表**\n\nIO发出的信号异常代码，是由操作系统来分配的，像加法移除的异常代码，由CPU触发\n\n根据异常代码在异常表里找到相应的处理代码\n\n![异常表](/assets/202263021612.png)\n\n异常处理似乎很像一个函数调用，但异常处理需要：\n\n1. 把 CPU 内当前运行程序用到的所有寄存器，都放到栈里面\n2. 像陷阱涉及用户态内核态的异常处理的栈要压到内核里\n3. 像故障这样的异常，在异常处理程序执行完成之后。从栈里返回出来，继续执行的不是顺序的下一条指令，而是故障发生的当前指令\n\n## 异常的类别\n\n类别 | 原因         | 异步/同步 | 返回行为\n-- | ---------- | ----- | ----------\n中断 | 来自I/O设备的信号 | 异步    | 总是返回到下一条指令\n陷阱 | 有意的异常      | 同步    | 总是返回到下一条指令\n故障 | 潜在可恢复的错误   | 同步    | 可能返回到当前指令\n终止 | 不可恢复的错误    | 同步    | 不会返回\n\n![中断处理](/assets/202263021934.png)\n\n![陷阱处理](/assets/202263021104.png)\n\n![故障处理](/assets/2022630211028.png)\n\n## Linux/X86-64系统中的异常\n\n- 除法错误\n- 一般保护故障\n- 缺页\n- 机器检查\n\n## 非本地跳转\n\n> 用户级异常控制流形式\n\n```c\n// 保存当前调用环境，供后面的longjmp调用\nint setjmp(jmp_buf env);\nint sigsetjmp(sigjmp_buf env,int savesigs);\n```\n\n```c\nvoid longjmp(jmp_buf env,int retval);\nvoid siglongjmp(sigjmp_buf env,int retval);\n```\n","metadata":"","hasMoreCommit":false,"totalCommits":6,"commitList":[{"date":"2024-11-15T11:28:52+08:00","author":"MY","message":"📦计算机系统","hash":"2d51e571e26ddfc7666c767c3370a836332575ef"},{"date":"2023-03-09T09:41:00Z","author":"My","message":"🛠替换在线图片","hash":"0c8b08bc22fbe482ba02da2f1fcad211441d3c23"},{"date":"2022-06-30T21:36:29+08:00","author":"MY","message":"✏️更新 异常控制流","hash":"b13dd92df91b1bf3032a098025894ab4df842a8b"},{"date":"2021-02-20T17:40:25+08:00","author":"cjiping","message":"✏更新异常控制流","hash":"cd8fa4919186580bf5939281b147371e04c261da"},{"date":"2019-07-16T12:33:12+08:00","author":"My、","message":"20190716上午","hash":"e515590272c4b38e6fd40a7fe3aa292a94971dd3"},{"date":"2019-07-15T10:59:02+08:00","author":"My、","message":"20190715","hash":"1f3f5c1cdf18eb1eae8ca3f0cee4bc0fb8788a31"}],"createTime":"2019-07-15T10:59:02+08:00"}