{"name":"运算方法与运算器","id":"计算机系统-程序结构和执行-运算方法与运算器","content":"# 运算方法与运算器\n\n## 定点数运算及溢出检测\n\n### 定点数加法运算\n\n![批注 2020-01-11 152715](/assets/批注%202020-01-11%20152715.png)\n\n### 定点数减法运算\n\n![批注 2020-01-11 152742](/assets/批注%202020-01-11%20152742.png)\n\n### 溢出\n\n>溢出:运算结果超出了某种数据类型的表示范围\n\n溢出只可能发生在同符号数相加时\n\n 方法1：对操作数和运算结果的符号位进行检测,当结果的符号位与操作数的符号不相同时就表明发生了溢出\n\n 方法2：对最高数据位进位和符号进位进行检测\n\n 方法3：用变型补码\n\n ```c\nint tadd_ok(int x,int y) {\n    int sum=x+y;\n    int neg_over=x<0&&y<0&&sum>=0;\n    int pos_over=x>=0&&y>=0&&sum<0;\n    return !neg_over&&!pos_over; \n}\n ```\n\n - 无符号数加法的溢出可用ALU的进位表示\n - 无符号数减法的溢出也可用带加/减功能的ALU的进位取反后表示\n\n## 原码一位乘法\n\n### 移位操作\n\n- 逻辑左移\n\n数据整体左移一位，最低位补0\n\n- 算术左移\n\n操作与逻辑左移一样，但是意义是等于数据乘2\n\n- 逻辑右移\n\n数据整体右移一位，最高位补0，最低位被移出\n\n- 算术右移\n\n数据整体右移一位，最高位被复制填补 ，最低位被移出\n\n相当于除2\n\n### 乘法\n\n![批注 2020-01-12 100000](/assets/批注%202020-01-12%20100000.png)\n\n## 补码一位乘法\n\n![批注 2020-01-13 132902](/assets/批注%202020-01-13%20132902.png)\n\n## 乘法器\n\n![批注 2020-01-13 133840](/assets/批注%202020-01-13%20133840.png)\n\n## 定点数除法\n\n","metadata":"","hasMoreCommit":false,"totalCommits":4,"commitList":[{"date":"2020-01-14T15:48:33+08:00","author":"MY","message":"更新存储器层次结构","hash":"4e3abb5751e192d16d8eb8f8b3a4a08ed1adb986"},{"date":"2020-01-13T13:54:46+08:00","author":"MY","message":"增加补码乘法与乘法器","hash":"c6b1971b2622ddbd6d45b8ad5a72a5ed5efe4d43"},{"date":"2020-01-12T10:00:29+08:00","author":"MY","message":"增加移位操作","hash":"d28987e8cbd340f05c70d728b063f1dc65a84a86"},{"date":"2020-01-11T15:38:34+08:00","author":"MY","message":"增加定点数运算及溢出检测","hash":"f29d167349e589ca5dc33c07b2ac733e436ae9f1"}],"createTime":"2020-01-11T15:38:34+08:00"}