{"name":"服务监控","id":"软件工程-微服务-服务治理-服务监控","content":"# 服务[监控](/软件工程/架构/系统设计/可观测性.md)\n\n### 健康检测\n\n1. 心跳机制 判断是否存活\n2. 接口可用率监控 判断健康状态\n\n## 链路追踪\n\n> Spring Cloud Sleuth为服务之间调用提供链路追踪。通过Sleuth可以很清楚的了解到一个服务请求经过了哪些服务，每个服务处理花费了多长\n\n### 原理\n\n当请求发送到分布式系统的入口端点时，只需要服务跟踪框架为该请求创建一个唯的跟踪标识，这个标识将随着服务调用在各个服务间传递，这样就可以根据这个标识得到各个服务间的调用，从而组合成一条完整的调用链\n\n### 链路梳理\n\n当端点出现异常，如何对整个调用链路进行排查。\n\n- TraceID\n\n### Sleuth\n\n![链路追踪的trace与span](/assets/202232216286.png)\n\n### ZipKin\n","metadata":"tags: ['服务架构', '微服务', '服务治理']","hasMoreCommit":false,"totalCommits":7,"commitList":[{"date":"2024-11-22T14:18:29+08:00","author":"MY","message":"📦服务治理","hash":"a28d217a6122f8f7c8a9254f8b2c0e32dccf9f6f"},{"date":"2022-06-14T17:31:57+08:00","author":"cjiping","message":"📦整理 服务治理","hash":"fc48f7a898c8786caea55f15b6345b63aa941f01"},{"date":"2022-03-22T16:29:28+08:00","author":"MY","message":"✏️更新 链路追踪","hash":"4fa4e595b13609914135a8d6926cbbe845249cd0"},{"date":"2021-10-26T22:34:15+08:00","author":"My","message":"✏️更新 埋点设计&链路追踪","hash":"9c0173d2f4cf6a41fa738063bf148da7a54d5e6a"},{"date":"2020-03-25T08:39:27+08:00","author":"MY","message":"更新 链路追踪","hash":"f64fd6ba9c0976d771f2769b93bf18c9e6679f2e"},{"date":"2020-02-22T14:57:14+08:00","author":"MY","message":"将spring cloud移到微服务下","hash":"fc716ce9a3148ede0806eb73cb8b7a372bc960fb"},{"date":"2019-07-25T17:04:47+08:00","author":"My、","message":"20190725下午","hash":"b26d4784217be54624a143d0edfeb8c2f6488d71"}],"createTime":"2019-07-25T17:04:47+08:00"}