{"name":"移动web开发","id":"软件工程-架构-Web前端-移动web开发","content":"# 移动web开发\n\n## 流式布局\n\n视口（viewport）就是浏览器显示页面内容的屏幕区域。 视口可以分为布局视口、视觉视口和理想视口\n\n### 布局视口 layout viewport\n\n![202001180923](/assets/202001180923.png)\n\n一般移动设备的浏览器都默认设置了一个布局视口，用于解决早期的PC端页面在手机上显示的问题。\n\niOS, Android基本都将这个视口分辨率设置为 980px，所以PC上的网页大多都能在手机上呈现，只不过元素看上去很小，一般默认可以通过手动缩放网页\n\n### 视觉视口 visual viewport\n\n![202001180929](/assets/202001180929.png)\n\n它是用户正在看到的网站的区域，我们可以通过缩放去操作视觉视口，但不会影响布局视口，布局视口仍保持原来的宽度\n\n### 理想视口 ideal viewport\n\n布局视口的宽度应该与理想视口的宽度一致，简单理解就是设备有多宽，我们布局的视口就多宽\n\n### meta标签\n\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0, minimum-scale=1.0\">\n```\n\n属性            | 解释说明\n------------- | ------------------------------------\nwidth         | 宽度设置的是viewport宽度，可以设置device-width特殊值\nheight | 页面高度，可以取值具体的数字，也可以是 device-height，表示跟设备高度相等\ninitial-scale | 初始缩放比，大于0的数字\nmaximum-scale | 最大缩放比，大于0的数字\nminimum-scale | 最小缩放比，大于0的数字\nuser-scalable | 用户是否可以缩放，yes或no (1或0)\n\n\n标准设置\n\n- 视口宽度和设备保持一致\n- 视口的默认缩放比例1.0\n- 不允许用户自行缩放\n- 最大允许的缩放比例1.0\n- 最小允许的缩放比例1.0\n\n## 二倍图\n\n### 物理像素&物理像素比\n\n物理像素点指的是屏幕显示的最小颗粒，是物理真实存在的。这是厂商在出厂时就设置好了,比如苹果6 是  750* 1334\n\n我们开发时候的1px 不是一定等于1个物理像素的\n\n一个px的能显示的物理像素点的个数，称为物理像素比或屏幕像素比\n\nlRetina（视网膜屏幕）是一种显示技术，可以将把更多的物理像素点压缩至一块屏幕里，从而达到更高的分辨率，并提高屏幕显示的细腻程度\n\n按照刚才的物理像素比会放大倍数，这样会造成图片模糊\n\n在标准的viewport设置中，使用倍图来提高图片质量，解决在高清设备中的模糊问题\n\n### 背景缩放background-size\n\n```css\nbackground-size: 背景图片宽度 背景图片高度;\n```\n\n单位： 长度|百分比|cover|contain;\n\ncover把背景图像扩展至足够大，以使背景图像完全覆盖背景区域。\n\ncontain把图像图像扩展至最大尺寸，以使其宽度或高度完全适应内容区域\n\n## 移动开发选择和技术解决方案\n\n- 单独制作移动端页面（主流）\n- 响应式页面兼容移动端（其次）\n\n### 解决方案\n\n移动端浏览器基本以 webkit 内核为主，因此我们就考虑webkit兼容性问题\n\n- 移动端公共样式Normalize.css\n\n- 移动端大量使用 CSS3盒子模型box-sizing\n  - CSS3盒子模型：盒子的宽度=  CSS中设置的宽度width 里面包含了 border 和 padding \n\n```css\n/*CSS3盒子模型*/\nbox-sizing: border-box;\n/*传统盒子模型*/\nbox-sizing: content-box;\n```\n\n- 移动端特殊样式\n\n```css\n/*CSS3盒子模型*/\nbox-sizing: border-box;\n-webkit-box-sizing: border-box;\n/*点击高亮我们需要清除清除  设置为transparent 完成透明*/\n-webkit-tap-highlight-color: transparent;\n/*在移动端浏览器默认的外观在iOS上加上这个属性才能给按钮和输入框自定义样式*/\n-webkit-appearance: none;\n/*禁用长按页面时的弹出菜单*/\nimg,a { -webkit-touch-callout: none; }\n```\n\n## 移动端常见布局\n\n移动端单独制作\n\n+ 流式布局（百分比布局）\n+ flex 弹性布局（强烈推荐）\n+ less+rem+媒体查询布局\n+ 混合布局\n\n响应式\n\n+ 媒体查询\n+ bootstarp\n\n流式布局：\n\n流式布局，就是百分比布局，也称非固定像素布局。\n\n通过盒子的宽度设置成百分比来根据屏幕的宽度来进行伸缩，不受固定像素的限制，内容向两侧填充。\n\n流式布局方式是移动web开发使用的比较常见的布局方式。\n\n```css\nwidth:100%;\nmax-width: 1200px;\nmin-width: 320px;\n```\n\n### flex布局\n\npc端浏览器支持情况比较差\n\n如果是移动端或者是不考虑兼容的pc则采用flex\n\nflex 是 flexible Box 的缩写，意为\"弹性布局\"，用来为盒状模型提供最大的灵活性，任何一个容器都可以指定为 flex 布局\n\n#### 原理\n\nFlex 延伸的方向称为“主轴”，把跟它垂直的方向称为“交叉轴”\n\n这样就可以抽象出交叉轴起点、交叉轴终点、主轴起点、主轴终点，它们可能是 top、left、bottom、right\n\n1. flex项分行\n\n把 flex 项逐个放入行，不允许换行的话，我们就“无脑地”把 flex 项放进同一行。允许换行的话，我们就先设定主轴剩余空间为 Flex 容器主轴尺寸，每放入一个就把主轴剩余空间减掉它的主轴尺寸，直到某个 flex 项放不进去为止，换下一行\n\n2. 计算每个 flex 项主轴尺寸和位置\n\n找出本行所有的带 Flex 属性的 flex 项，把剩余空间按 Flex 比例分给它们即可,如果本行完全没有带 flex 属性的 flex 项，justify-content 机制就要生效了，它的几个不同的值会影响剩余空白如何分配\n\n3. 计算 flex 项的交叉轴尺寸和位置\n\n首先根据 align-content 计算每一行的位置，再根据 alignItems 和 flex 项的 alignSelf 来确定每个元素在行内的位置\n\n#### 父项常见属性\n\n通过给父盒子添加flex属性，来控制子盒子的位置和排列方式\n\n- flex-direction设置主轴的方向\n\n![202001182037](/assets/202001182037.jpg)\n\n```css\nflex-direction: value;\n```\n\n值              | 说明\n-------------- | -------\n**row**        | 默认值从左到右\nrow-reverse    | 从右到左\n**column**     | 从上到下\ncolumn-reverse | 从下到上\n\n-  justify-content 设置主轴上的子元素排列方式\n\n值                 | 说明\n----------------- | ---------------------\n**flex-start**    | 默认值从头部开始如果主轴是x轴，则从左到右\nflex-end          | 从尾部开始排列\n**center**        | 在主轴居中对齐(如果主轴是x轴则水平居中)\n**space-around**  | 平分剩余空间\n**space-between** | 先两边贴边再平分剩余空间(重要)\n\n- flex-wrap设置是否换行\n\nnowrap 不换行\nwrap 换行\n\n- align-items 设置侧轴上的子元素排列方式（单行 ）\n\nflex-start 从头部开始\nflex-end 从尾部开始\ncenter 居中显示\nstretch 拉伸\n\n- align-content  设置侧轴上的子元素的排列方式（多行）\n\n值             | 说明\n------------- | -------------------\nflex-start    | 默认值在侧轴的头部开始排列\nflex-end      | 在侧轴的尾部开始排列\ncenter        | 在侧轴中间显示\nspace-around  | 子项在侧轴平分剩余空间\nspace-between | 子项在侧轴先分布在两头，再平分剩余空间\nstretch       | 设置子项元素高度平分父元素高度\n\n-  flex-flow 属性是 flex-direction 和 flex-wrap 属性的复合属性\n\n```css\nflex-flow:row wrap;\n```\n\n#### flex布局子项常见属性\n\n- flex 属性\n\n定义子项目分配剩余空间，用flex来表示占多少**份数**\n\n- align-self控制子项自己在侧轴上的排列方式\n\nalign-self 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖 align-items 属性\n\n- order 属性定义项目的排列顺序\n\n数值越小，排列越靠前，默认为0\n\n## rem布局\n\n### rem\n\nrem (root em)是一个相对单位，类似于em，em是父元素字体大小。\n\n不同的是rem的基准是相对于html元素的字体大小\n\n### 媒体查询\n\n+ 使用 @media查询，可以针对不同的媒体类型定义不同的样式\n+ @media 可以针对不同的屏幕尺寸设置不同的样式\n+ 当你重置浏览器大小的过程中，页面也会根据浏览器的宽度和高度重新渲染页面 \n+ 目前针对很多苹果手机、Android手机，平板等设备都用得到多媒体查询\n\n```css\n@media mediatype and|not|only (media feature) {\n    CSS-Code;\n}\n```\n\nmediatype 查询类型\n\n值     | 解释说明\n----- | -----------------\nall   | 用于所有设备\nprint | 用于打印机和打印预览\nscree | 用于电脑屏幕，平板电脑，智能手机等\n\n关键字\n\n关键字将媒体类型或多个媒体特性连接到一起做为媒体查询的条件\n\n媒体特性\n\n值         | 解释说明\n--------- | -----------------\nwidth     | 定义输出设备中页面可见区域的宽度\nmin-width | 定义输出设备中页面最小可见区域宽度\nmax-width | 定义输出设备中页面最大可见区域宽度\n\n为了防止混乱，媒体查询我们要按照从小到大或者从大到小的顺序来写,但是我们最喜欢的还是从小到大来写，这样代码更简洁\n\n媒体特性也可以加在css引用中，来达到不同的屏幕加载不同的css文件\n\n### rem适配方案\n\n1.less+rem+媒体查询\n\n2.lflexible.js+rem\n\n","metadata":"","hasMoreCommit":false,"totalCommits":10,"commitList":[{"date":"2025-10-28T10:47:51+08:00","author":"MY","message":"docs(summary): 更新目录结构并删除移动开发相关内容","hash":"1841a7e05480ee8d99eccc4e4993c8ad605dc045"},{"date":"2022-07-01T16:51:16+08:00","author":"cjiping","message":"✏️更新 HTML&CSS","hash":"08d5922431fc7da313643e1e5d4899f666049380"},{"date":"2022-06-30T17:23:37+08:00","author":"cjiping","message":"✏️更新 HTML&CSS","hash":"a7cf7ee21ef1b46976cb37943b5231b31600cfb5"},{"date":"2021-01-12T14:25:24+08:00","author":"cjiping","message":"✏更新 移动web开发","hash":"0dc9d4d20118770dcfb84f87070b74f0fbfe4a42"},{"date":"2020-02-14T21:53:58+08:00","author":"MY","message":"完成笔记结构重构","hash":"fa76a092bde3bf674471ba101d7e1d1dd2c7108b"},{"date":"2020-01-20T11:56:50+08:00","author":"MY","message":"增加rem适配方案","hash":"c4768013d75a800912a178b238806d8492db4bc6"},{"date":"2020-01-20T09:42:24+08:00","author":"MY","message":"增加rem布局和媒体查询","hash":"99e0a2348451009023e7e567815b874c527aa0de"},{"date":"2020-01-19T09:52:00+08:00","author":"MY","message":"增加flex子项属性","hash":"9eb9a95face9bac97d713fc350a657441536a7c7"},{"date":"2020-01-19T09:23:43+08:00","author":"MY","message":"增加flex 父类属性","hash":"50aa1950359efe6f4ccc27862f2ecf9e4ca5b564"},{"date":"2020-01-18T11:11:15+08:00","author":"MY","message":"增加移动web开发-流式布局","hash":"0fc60f1bdf55f4c882375e3214c571b6f6057009"}],"createTime":"2020-01-18T11:11:15+08:00"}