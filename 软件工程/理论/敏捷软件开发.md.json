{"name":"敏捷软件开发","id":"软件工程-理论-敏捷软件开发","content":"# 敏捷软件开发\n\n>敏捷开发以用户的需求进化为核心，采用迭代、循序渐进的方法进行软件开发。在敏捷开发中，软件项目在构建初期被切分成多个子项目，各个子项目的成果都经过测试，具备可视、可集成和可运行使用的特征。换言之，就是把一个大项目分为多个相互联系，但也可独立运行的小项目，并分别完成，在此过程中软件一直处于可使用状态。\n\n应对模糊需求、快速变化需求的最佳方法\n\n## 敏捷联盟\n\n- 个体交互 胜过 过程和工具\n\n项目的关键因素是人 但是一个好过程并不能帮助项目成功\n\n- 可以工作的软件 胜过 面面俱到的文档\n\n过多的文档比过少的文档更糟\n\n- 客户合作 胜过 合同谈判\n\n成功的项目需要有序频繁的客户反馈\n\n- 响应变化 胜过 遵循计划\n\n对于下两周 做好详细的计划\n\n为下三个月做好粗略的计划\n\n三个月以后的事 就做极为粗糙的计划\n\n## 原则\n\n- 尽早交付\n- 欢迎需求变更\n- 交付间隔越短越好\n- 客户与开发团队一起工作\n- 重视人的因素\n- 使用可以工作的软件衡量工作进度\n- 提倡恒定的开发速度\n- 简单就好\n- 自组织的团队\n- 不断反省 调整自身\n\n## 方法\n\n- 极限编程\n- scrum\n- kanban\n\n## 极限编程\n\n### 实践原则\n\n- 客户作为团队成员\n- 用户故事\n- 短交付周期\n  - 迭代\n  - 发布\n- 验收测试\n- 结对编程\n  - 减少缺陷率\n  - 促进知识传播\n- 测试驱动开发\n- 集体所有权\n- 持续集成\n- 可持续的开发速度\n- 开放的工作空间\n- 计划游戏\n- 简单设计\n- 重构\n- 隐喻\n\n## 测试\n\n单元测试\n\n- 验证操作的正确性\n- 站在调用者的角度\n- 促使解耦\n\n验收测试\n\n针对每个特性编写测试脚本\n\n## 敏捷设计\n\n拙劣设计的症状\n\n- 僵化性\n  -  设计难以改变\n- 脆弱性\n  - 设计容易被破坏\n- 牢固性\n  - 设计难以重用\n- 粘滞性\n  - 难以做正确的事\n- 不必要的复杂性\n  - 过分设计\n- 不必要的复制\n- 晦涩性\n  - 表达令人混乱\n\n敏捷设计致力于保持系统设计在任何时间都尽可能简单 干净 富有表现力\n\n## Scrum模型\n\n- 迭代式增量软件开发过程\n\n### Sprint\n\n- 迭代周期\n\n### 角色\n\n- 产品负责人\n  - 负责建立与维护产品特性\n  - 有决策权\n  - 了解工作流程及技术水平\n- 教练\n  - 确保更快交付\n  - 服务于团队 确保团队朝着目标冲刺\n- 团队\n  - 稳定的 团员自组织 平等\n\n### 活动\n\n- 冲刺规划会议\n  - 确立目标、任务\n- 每日站会 10分钟搞定！！！\n  - 昨天做了什么 今天准备做什么 遇到了什么困难\n- 冲刺复审会议\n  - 演示功能 产品负责人验收功能\n- 冲刺回顾会议\n\n### 工件\n\n- 产品待办列表\n  - 唯一的需求来源\n- 冲刺待办列表\n  - 当前迭代周期的目标计划\n- 产品增量\n  - 当前迭代周期迭代完成的需求总和\n\n## kanban\n\n渐进增量式过程改进方法学\n\n- 可视化工作流\n- 限制进行中的工作\n\n物理看板（信息辐射强）\n\n```mermaid\nkanban\n  Todo\n    [Create Documentation]\n    docs[Create Blog about the new diagram]\n  [In progress]\n    id6[Create renderer so that it works in all cases. We also add som extra text here for testing purposes. And some more just for the extra flare.]\n  id9[Ready for deploy]\n    id8[Design grammar]@{ assigned: 'knsv' }\n  id10[Ready for test]\n    id4[Create parsing tests]@{ ticket: MC-2038, assigned: 'K.Sveidqvist', priority: 'High' }\n    id66[last item]@{ priority: 'Very Low', assigned: 'knsv' }\n  id11[Done]\n    id5[define getData]\n    id2[Title of diagram is more than 100 chars when user duplicates diagram with 100 char]@{ ticket: MC-2036, priority: 'Very High'}\n    id3[Update DB function]@{ ticket: MC-2037, assigned: knsv, priority: 'High' }\n\n  id12[Can't reproduce]\n    id3[Weird flickering in Firefox]\n```\n\n**使用**\n\n列非固定的，随时间空间变化而变化\n可以根据此看到工作状态与潜在问题\n\n记事贴写什么？\n\n- 工作描述·\n- 电子系统唯一标识\n- 完成期限\n- 负责人\n- 工作类型\n\n保证工作项的粒度粗细差别不大\n\n降低前置时间（任务从开始到结束的时间）是一个追求目标\n\n需要限制每列中的卡片\n\n","metadata":"","hasMoreCommit":false,"totalCommits":10,"commitList":[{"date":"2024-11-15T11:40:28+08:00","author":"MY","message":"📦软件工程","hash":"402784365f21586f8e39da94d40145ec8236b948"},{"date":"2022-01-02T23:47:29+08:00","author":"MY","message":"✏️更新 DevOps 相关","hash":"aae085cd22c794d75680b62603a5bc0c98a8948b"},{"date":"2021-03-17T17:37:58+08:00","author":"cjiping","message":"📦整理 软件工程 理论","hash":"4bdaf047b41bfd74136bca4ac79055ecf91a8392"},{"date":"2020-08-11T15:36:23+08:00","author":"MY","message":"✏更新 敏捷软件开发","hash":"c9c1e927b53745fe933ea0c9709e929d19723938"},{"date":"2020-08-10T15:59:29+08:00","author":"MY","message":"✏更新 敏捷软件开发","hash":"6e6b27ca38a64e5b99129a0783fb1aa15a0a25f8"},{"date":"2020-08-07T13:45:46+08:00","author":"MY","message":"✏更新 敏捷软件开发","hash":"4b63e53924cf2188c9f39c3aa2049e96925108b3"},{"date":"2020-08-06T15:59:18+08:00","author":"MY","message":"✏更新 敏捷软件开发","hash":"071e871b2c2336d0fa24b627da5016c40cca2338"},{"date":"2020-08-05T14:58:59+08:00","author":"MY","message":"✏更新 敏捷软件开发","hash":"edad15ddf9c3449d2f968c57a2983e3c23ed1a3d"},{"date":"2019-07-26T11:55:48+08:00","author":"My、","message":"20190726上午","hash":"2c705ec48c4615c92c8933f8b7db51651564dd6e"},{"date":"2019-07-25T17:04:47+08:00","author":"My、","message":"20190725下午","hash":"b26d4784217be54624a143d0edfeb8c2f6488d71"}],"createTime":"2019-07-25T17:04:47+08:00"}