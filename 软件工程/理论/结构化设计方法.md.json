{"name":"结构化设计方法","id":"软件工程-理论-结构化设计方法","content":"# 结构化设计\n\n- 定义：结构化设计是一种软件开发活动，旨在通过系统化的方法将需求规格转化为清晰的软件结构。\n- 目标：降低系统复杂性，建立高内聚、低耦合的模块结构，便于理解、实现和维护。\n\n## 设计层次\n\n- 总体设计：从系统全局角度出发，确定模块划分和层次关系，形成初始设计并逐步精化。\n- 详细设计：进一步描述每个模块的逻辑、接口和实现细节，确保可以直接进入编码。\n\n## 整体框架\n\n- 体系结构设计：定义系统的总体框架与模块分布。\n- 接口设计：定义模块与模块、系统与系统、系统与用户之间的交互方式。\n- 数据设计：定义数据存储结构、数据库模式以及数据流转。\n\n## 总体设计\n\n### 初始模块结构图设计\n\n数据流图分类\n- 变换型 DFD：强调数据从输入到输出的连续变换过程。\n- 事务型 DFD：强调根据事务选择不同处理路径。\n\n变换型设计步骤\n- 复审并精化模型\n- 确定系统边界\n- 进行第一级分解，绘制顶层和第一层模块结构图\n\n事务型设计步骤：通过事务处理逻辑确定模块分支和路径。\n\n### 初始模块结构图精化的原则\n\n- 模块：实现特定功能的一组过程与数据。\n- 模块化：将系统划分为模块的过程，能显著降低复杂性。\n\n#### 耦合\n\n- 内容耦合：一个模块直接修改另一模块内部数据\n- 公共耦合：一组模块均访问同一全局数据区\n- 外部耦合：一组模块均与外部环境有关\n- 控制耦合：模块之间传输控制信息\n- 标记耦合：模块间有数据结构依赖关系\n- 数据耦合：模块之间有数据值传递\n- 非直接耦合：模块之间没有任何关系\n\n![2021923234258](/assets/2021923234258.png)\n\n低耦合原则：通过接口隐藏细节、避免全局变量、强化封装\n\n#### 内聚\n\n- 偶然内聚：模块组成部分没有关联\n- 逻辑内聚：组件逻辑功能类似\n- 时间内聚：模块各部分在同一时间内被执行\n- 过程内聚：模块各部分受同一控制流支配\n- 通信内聚：模块使用相同输入或输出的数据\n- 顺序内聚：前一模块的输出，是后以模块的输入\n- 功能内聚：模块各组成部分执行同一功能\n\n![2021923232438](/assets/2021923232438.png)\n\n高内聚原则：模块功能单一，暴露最小接口。\n\n启发式规则：在精化过程中可借助经验和模式优化设计，提升内聚并降低耦合\n\n- 改进软件结构，提高模块独立性\n- 模块规模适中\n- 深度、宽度、扇入和扇出适中\n- 模块的作用域力争在控制域之内\n- 降低模块接口的复杂性\n- 模块功能应该可以预测\n\n## 接口设计\n\n- 模块接口：明确函数/过程调用方式与数据传递。\n- 系统接口：规定系统与外部软件、硬件的交互方式。\n- 人机交互界面：\n  - 特性：可使用性、灵活性、可靠性。\n  - 用户类型：外行、初学者、熟练者、专家。\n  - 设计原则：一致性、操作简洁、避免无反馈、支持撤销、减少记忆负担、提高学习效率。\n\n## 数据设计\n\n- 文件存储：系统需要的文件结构及存储方式。\n- 数据库设计：定义数据模型、关系模式及访问方式，现代设计常结合 ORM 实现。\n\n## 详细设计\n\n### 工具\n\n- 伪代码：用接近自然语言的方式描述逻辑。\n- 程序流程图：可视化控制流。\n- PAD 图、N-S 图：结构化图形化工具。\n- 判定表与判定树：用于处理复杂条件和决策逻辑。\n\n### 软件设计规约\n\n- 概要设计规约：系统环境、模块设计、文件与全局数据描述。\n- 详细设计规约：每个模块的详细逻辑和接口。\n- 规约格式：形成统一、标准化的文档输出。\n\n## 软件设计评审\n\n- 非正式评审：小范围交流、走查代码与文档。\n- 正式评审：严格的会议评审流程，确保设计符合规范与需求。\n","metadata":"","hasMoreCommit":false,"totalCommits":7,"commitList":[{"date":"2025-09-21T13:55:19+08:00","author":"MY","message":"docs(software engineering): 重构结构化设计文档内容","hash":"7ffb853124caa34bb32c085bc8d23dfe9d3ddeb1"},{"date":"2021-09-25T20:56:06+08:00","author":"My","message":"✏️更新 耦合内聚","hash":"bf1f8aded8183b86f173f18fa7fccaee65b4181a"},{"date":"2021-09-23T23:56:42+08:00","author":"My","message":"✏️更新 边界 内聚 耦合","hash":"1a599271f35ccff435321e42ff0a8b29a967a41c"},{"date":"2021-03-17T17:37:58+08:00","author":"cjiping","message":"📦整理 软件工程 理论","hash":"4bdaf047b41bfd74136bca4ac79055ecf91a8392"},{"date":"2019-07-20T19:37:13+08:00","author":"My、","message":"20190720下午","hash":"cc9f96d32f3ee3a6c8a83dec85ecf319e808dde4"},{"date":"2019-07-20T13:31:17+08:00","author":"My、","message":"20190720上午","hash":"5d866d79c8fc6fdd58ac83ef1a4e5f8cf376ae5a"},{"date":"2019-07-18T12:00:57+08:00","author":"My、","message":"20190718中午","hash":"44ce069fdcde245786e0d3277af2703924783253"}],"createTime":"2019-07-18T12:00:57+08:00"}