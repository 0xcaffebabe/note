{"name":"软件需求","id":"软件工程-理论-软件需求","content":"# 需求发现\n\n- 自悟\n- 交谈\n- 观察\n- 小组会\n- 提炼\n\n# 需求的获取\n\n## 需求获取的任务\n\n- 发现和分析问题的原因/结果关系\n- 与用户进行各种方式的交流\n- 按照数据、过程和接口观察问题的不同侧面\n- 获取的需求文档化,形式用例、决策表、决策树\n\n## 需求获取应遵循的原则\n\n- 深入浅出的原则\n- 以流程为主线的原则\n\n## 需求获取的过程\n\n1).开发高层的业务模型\n\n2).定义项目范围和高层需求\n\n3).识别用户类和用户代表\n\n4).获取具体的需求\n\n5).确定目标系统的业务工作流\n\n6).需求整理与总结\n\n# 需求分析阶段任务\n- 获取需求\n  -  通过启发、引导从客户（或用户）那里得到的原始需求是他们的业务要求（needs）\n\n- 分析需求\n  - 完整性\n  - 正确性\n  - 合理性\n  - 可行性\n  - 充分性\n- 需求定义\n  - 编写需求规格说明 \n- 验证需求\n  - 对编写的需求规格说明进行评审\n\n# 需求的作用\n\n- 现代系统中软件的作用\n- 软件在系统工程中的作用\n- 自顶向下和自底向上的开发\n\n# 需求的定义\n\n- 用户需求：由用户提出来的，期望满足自身一定需要的要求\n- 产品需求：分析提炼用户真实需求后，提出的符合产品定位的解决方案\n\n## 需求的基本性质\n\n- 必要性\n- 无歧义\n- 可测的\n- 可跟踪\n- 可测量\n\n# 需求的分类\n\n- 功能需求\n  - 业务需求(why)\n    - 范围文档\n    - 特性\n    - 价值\n  - 用户需求(what)\n    - 用例说明文档\n  - 系统需求(how)\n    - 系统行为\n    - 需求规格说明文档\n- 非功能需求\n  - 性能\n  - 外部接口\n  - 设计约束\n  - 质量属性\n\n# 需求规约\n\n> 一个需求规约时一个软件所有需求陈述的正式文档，是软件的概念模型\n\n## 基本性质\n\n- 重要性与稳定性程度\n- 可修改\n- 完整\n- 一致\n\n## 格式\n\n- 引言\n- 总体描述\n- 特定需求\n\n## 作用\n\n- 双方的技术合同书\n- 项目管理控制点\n- 产品设计的起始点\n- 测试和使用的基础\n\n# 系统需求规格说明\n\n> **需求分析阶段的重要任务之一是根据分析的结果编写需求规格说明，经过严格评审并得到用户确认之后，作为这个阶段的最终成果。**\n> **按照国家标准GB/T 8567—2006《计算机软件文档编制规范》，涉及需求规格说明的文档有“软件需求规格说明（SRS）”、“数据需求说明（DRD）”等。**\n\n## 应该包含在SRS中的内容\n\n- **功能**：软件应该提供什么功能？\n- **外部接口**：软件如何与人、系统硬件和其他系统等进行相互作用？\n- **性能**：软件系统在运行速度、可用性、响应时间、恢复时间等方面有什么要求？\n- **特性**：软件系统在可移植性、可维护性、安全性等方面有什么考虑？\n- **设计约束**：是否存在必要的标准、开发语言、数据库、资源限制、运行环境等因素的影响和策略？\n\n## 不应该包括在SRS 中的内容\n\n- 项目开发计划\n  - 诸如成本、人员、进度、工具、方法等\n- 产品保证计划\n  - 诸如配置管理、验证与测试、\n         质量保证等\n- 软件设计细节\n  - 需求通常用于表达“做什么”，\n         而不描述“如何做”\n\n## 编写需求规格说明的原则\n\n- 原则1：只描述“做什么”而无须描述“怎么做”\n- 原则2：必须说明运行环境\n- 原则3：考虑用户、分析员和实现者的交流\n  - 对形式化和自然语言之间作出恰当的选择\n  - 明确的理解最重要，不存在十全十美的软件规格说明书\n- 原则4：力求寻找到恰如其分的需求详细程度\n  - 一个有益的原则就是编写单个的可测试需求文档\n  - 建议将可测试的需求作为衡量软件产品规模大小的尺度\n- 原则5：文档段落不宜太长\n  - 简短\n  - 记住：不要在需求说明中使用“和/或”、“等等”之类的词\n- 原则6：避免使用模糊的、主观的术语\n  - 如用户友好、容易、简单、迅速、有效、许多、最新技术、优越的、可接受的、最大化、最小化、提高等\n  - 不可验证\n- **建议：采用一种标准的SRS 模板** \n\n## SRS模板\n## 需求规格说明的质量要求\n\n- 正确性\n- 一致性\n- 完整性\n- 可验证性\n- 无二义性\n- 可修改性\n- 可跟踪行\n\n# 需求评审\n\n## 评审的主要内容\n\n1）功能\n2）性能\n3）接口\n4）数据\n5）硬件\n6）软件\n7）通信\n8）正确性\n9）完整性\n10）可行性\n11）一致性\n12）兼容性\n13）清晰性/无歧义性\n14）安全性\n15）健壮性\n16）可理解性\n17）可修改性\n18）可测试性和可验证性\n19）可维护性\n20）可追踪性\n21）可靠性\n22）其他\n\n## 需求评审中的常见风险\n\n1）需求评审的参与者选取不当\n2）评审规模过大（10-30页）\n3）评审组规模过大（3-7人）\n4）评审时间过长（2h以内）\n\n# 需求管理\n## 需求跟踪\n\n>需求跟踪性是**维护需求与软件制品之间的映射**（例如设计对象、用例、测试用例、已实现的软件组件等），以满足整个开发生命周期的需要。\n\n- 建立需求跟踪性的过程\n  - 识别并唯一地标识SRS 中的每一个需求\n  - 建立和更新SRS 中的跟踪矩阵\n  - 工作制品的创建者负责增加该制品与需求的跟踪信息\n  - 跟踪矩阵应该作为工作制品的一部分进行审查\n\n## 需求变更管理\n\n需求管理的所有活动中，最重要的是—— **“需求变更管理”，包括:**\n识别出的问题-->问题分析和变更描述-->变更分析和成本计算-->变更实现-->修正后的需求\n\n# 项目需求及需求规约\n\n","metadata":"","hasMoreCommit":false,"totalCommits":9,"commitList":[{"date":"2023-06-27T17:19:21+08:00","author":"MY","message":"✏软件需求","hash":"e074eb0dc6832f883585ac9f72c9666f45d3b6d9"},{"date":"2021-03-17T17:37:58+08:00","author":"cjiping","message":"📦整理 软件工程 理论","hash":"4bdaf047b41bfd74136bca4ac79055ecf91a8392"},{"date":"2020-11-12T18:16:47+08:00","author":"tianyingying-123","message":"Update 软件需求.md","hash":"611042fe9acb7f1d63f4d3166b3a63be12a40e89"},{"date":"2020-11-12T18:11:17+08:00","author":"tianyingying-123","message":"Update 软件需求.md","hash":"23b076efc91ad2ddc0c07c5541323a8f32cccaea"},{"date":"2020-11-12T18:10:27+08:00","author":"tianyingying-123","message":"Update 软件需求.md","hash":"00d46fc9d007bd4006bb3c889b7378fe8c30972d"},{"date":"2019-07-16T12:33:12+08:00","author":"My、","message":"20190716上午","hash":"e515590272c4b38e6fd40a7fe3aa292a94971dd3"},{"date":"2019-07-15T17:27:04+08:00","author":"My、","message":"20190715","hash":"b807838b20ab970bf9429a80da38113f5e3a1991"},{"date":"2019-07-09T19:58:20+08:00","author":"My","message":"20190709","hash":"308f0b3bcc18c2a7ed75d6348f74d7d3e4c5a049"},{"date":"2019-07-07T08:31:01+08:00","author":"My","message":"20190707","hash":"ef73181857615bae3e748199620c564c9a4281b7"}],"createTime":"2019-07-07T08:31:01+08:00"}