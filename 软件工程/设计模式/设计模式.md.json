{"name":"设计模式","id":"软件工程-设计模式-设计模式","content":"\n# 设计模式\n\n在基于[设计原则](/软件工程/软件设计/设计原则.md)的基础，引申出一系列模式，通过这些模式来方便交流及提升软件复用性、可维护性。\n\n所谓模式，就是一些在特定场景下的特定做法，其不仅是一种代码组织方式，同时也是一种沟通语言，或者称之为工具。\n\n为什么硬编码不好？不够灵活，当需求发生变更，就得对代码进行修改，这将容易产生错误并且不利于复用\n\n设计模式的使用也是有代价的，杀鸡焉用牛刀。架构是演进出来的，设计模式也是在需求的不断变更中应用出来的，切忌为了使用设计模式而使用设计模式。\n\n## 模式开发\n\n- 反复思考\n  - 记录解决问题失败与成功的经验\n  - 反思系统的设计\n- 以结构化的方式有效描述模式\n- 尽早涉及具体问题\n- 保持模式正交\n","metadata":"","hasMoreCommit":true,"totalCommits":15,"commitList":[{"date":"2021-10-23T17:20:49+08:00","author":"My","message":"✏️链接修正","hash":"d2ab44299cc8cf7eb962f194ceb0d21bce3c70b2"},{"date":"2021-08-10T23:23:56+08:00","author":"MY","message":"✏️更新 设计模式","hash":"68359e9e189d5b4f16384cde4cdfcac0883c091a"},{"date":"2021-08-03T19:01:36+08:00","author":"cjiping","message":"📦整理 软件设计","hash":"73ec62cb807d110131e3ff2202e006535d2b8a00"},{"date":"2021-04-09T15:50:21+08:00","author":"cjiping","message":"✏更新 设计模式","hash":"8f5ab3ac8d7c517e66f721da31571066a8af695c"},{"date":"2020-12-24T10:14:27+08:00","author":"cjiping","message":"✏更新 设计模式","hash":"963a040688a95a30d4b1771b07ac14ad441617e6"},{"date":"2020-01-06T14:12:22+08:00","author":"MY","message":"新增六大原则","hash":"0118a70fadfa65f30cad2fd5c14b80170df13682"},{"date":"2020-01-05T15:40:24+08:00","author":"MY","message":"更新模板方法","hash":"44e5e3d0f0f2a3550c07a17e425915d1d3d3e1e2"},{"date":"2020-01-04T15:51:48+08:00","author":"MY","message":"新增计算机工作原理层次","hash":"1998d68af8cf8b3403abf1846f6cedbd8dd0cab1"},{"date":"2020-01-04T14:14:27+08:00","author":"MY","message":"更新动态代理","hash":"6dd4b48ed12b251aff7397e8615509636e058e89"},{"date":"2020-01-03T22:01:51+08:00","author":"MY","message":"更新了静态代理","hash":"b7d7c73b8ea79dd093a44fa93cf25d16822d364f"}],"createTime":"2019-11-08T16:39:40+08:00"}