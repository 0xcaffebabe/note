{"name":"代码质量","id":"软件工程-软件设计-代码质量-代码质量","content":"# 代码质量\n\n软件质量：\n\n```mermaid\nmindmap\n  root((外部和内部质量))\n    可靠性\n      成熟性\n      容错性\n      易恢复性\n      可靠性的依从性\n    功能性\n      适合性\n      准确性\n      互操作性\n      保密安全性\n      功能的依从性\n    易用性\n      易理解性\n      易操作性\n      吸引性\n      吸引性的依从性\n    效率\n      时间特性\n      资源李永新\n      效率依从性\n    维护性\n      易分析性\n      易修改性\n      稳定写\n      易测试性\n      维护性的依从性\n    可移植性\n      适应性\n      易安装性\n      共存性\n      易替换性\n      可移植性的依从性\n```\n\n代码特性之间的相互影响\n\n维度1\\维度2|正确性|可用性|效率|可靠性|完整性|适应性|精确性|健壮性\n-|-|-|-|-|-|-|-|-\n正确性|↑||↑|↑|||↑|↓\n可用性||↑||||↑|↑|\n效率|↓||↑|↓|↓|↓|↓|\n可靠性|↑|||↑|↑||↑|↓\n完整性|||↓|↑|↑|\n适应性|||||↓|↑||↑\n精确性|↑||↓|↑||↓|↑|↓\n健壮性|↓|↑|↓|↓|↓|↑|↓|↑\n\n- ↑：让它提升\n- ↓：让它下降\n\n高质量 = 好看(可读性/可维护性...) + 好用(健壮性/性能...)\n\n如何得出高质量代码：\n\n1. 做好顶层设计 良好的编码\n2. 从垃圾代码 -> 重构 -> 优秀的代码\n\n代码质量体系建设：规范定义实践(编码/重构) -> 质量度量(代码审查) -> 复盘 -> 回到实践\n\n## 代码质量差的原因\n\n![2021826143412](/assets/2021826143412.png)\n\n## 代码防腐\n\n- 信息隐藏：隐藏的本质是为了避免过多的依赖\n- 持续改进：不要提前设计 持续地去响应变化\n","metadata":"","hasMoreCommit":false,"totalCommits":6,"commitList":[{"date":"2025-09-21T14:03:43+08:00","author":"MY","message":"docs(mindmap): 统一思维导图根节点格式","hash":"44fc90fa0f22040d171dbf83cd6f2fd8c020444a"},{"date":"2024-11-15T15:13:06+08:00","author":"MY","message":"📦软件设计","hash":"72559316d91a8efb68055aa4f2a0af774fc2d724"},{"date":"2021-09-23T16:48:44+08:00","author":"cjiping","message":"✏更新 代码质量","hash":"444aac65500f89e7f1273b09b359be5042ce16de"},{"date":"2021-08-26T14:48:32+08:00","author":"cjiping","message":"✏更新 代码质量 设计原则","hash":"9da3cf679e0ae0964e0a9efa877751635b57b24b"},{"date":"2021-08-25T17:42:03+08:00","author":"cjiping","message":"✏更新 代码质量 软件测试","hash":"48a59bac6096b4d96d47dce6dabab96a3723022d"},{"date":"2021-08-19T20:26:37+08:00","author":"cjiping","message":"✏更新 代码质量","hash":"d9a1e9d5cea3ae0a8c0461c96360fa7304cb11fc"}],"createTime":"2021-08-19T20:26:37+08:00"}