{"name":"音频技术","id":"音视频开发-音频技术","content":"# 音频技术\n\n## 语音保存\n\n### 采样数据格式\n\n采集到模拟信号，然后通过 ADC（模数转换）将模拟信号转换成数字信号以后，再通过 PCM（Pulse Code Modulation）脉冲编码调制对连续变化的模拟信号进行采样、量化和编码转换成离散的数字信号\n\nPCM 文件就是未经封装的音频原始文件，在输出之前，需要转换一下。这些数据的格式我们通常称之为采样数据格式\n\n### 采样频率\n\nPCM 数据的输入和输出是需要有一个频率的\n\n- 8000 Hz 主要是电话通信时用的采样率\n- 11025 Hz、22050 Hz 主要是无线电广播用的采样率\n- 44100 Hz 常用于音频 CD，MP3 音乐播放等场景\n- 48000 Hz 常用于 miniDV、数字电视、DVD、电影和专业音频等设备中\n\n当采样频率 fs 大于信号中最高频率 fmax 的 2 倍时（fs > 2fmax），采样之后的数字信号才可以完整地保留原始信号中的信息\n\n### 声道与布局\n\n除了左声道、右声道，还有立体声等，当我们听到的音频声道比较多，比如听交响乐的时候，立体感会尤为明显\n\n### 采样位深度\n\n采样位深也就是每个采样点用多少 bit 来表示。决定了声音的动态范围，常见的 16 位（16bit）可以记录大概 96 分贝（96dB）的动态范围，位数越多，保真程度越高\n\n### 码率\n\n用 bps（bits per second）来表示，也就是每秒钟有多少位数据\n\n一个 PCM 音频文件存储空间=采样位深×采样率×通道数×时长\n\n### 通道数\n\n同一时间采集或播放的音频信号的总数\n\n### 音视频封装\n\n- 无损：APE、WAV、FLAC、AIFF、ALAC、WMA\n- 有损：MP3/MP3Pro、AAC、AMR、WMA、RA、OGG\n\n## 语音信号\n\n- 浊音：声带振动作为声源产生的声音\n- 清音：由气体在经过唇齿等狭小区域由于空气与腔体摩擦而产生的声音\n\n声带会振动从而产生一个声波，这个声波叫做基波，基波的频率叫做基频，也就是音调\n\n声带振动产生的基波，在传输过程中会在声道表面反复碰撞反射，从而产生许多频率倍数于基频的声波，这些声波叫做谐波\n\n![](/assets/20231123161049.png)\n\n谐波频率和基频是浊音能量集中的地方\n\n声源的振动信号通过声道时，声道本身也会发生共鸣，与声道共振频率相近的能量会被增强，远离声道共振频率的部分则会被衰减，从而谐波的能量就组成了一组高低起伏的形状包络，这些包络中的巅峰位置叫做共振峰\n\n![](/assets/20231123161420.png)\n\n语音识别背后的原理之一是通过共振峰的位置和能量分布来识别音频代表的语音\n\n### 语音信号分析\n\n为了避免由于信号的窗口处理或者截断等操作导致频谱波形中出现能量泄漏到其他频率，一般采用加窗，即在原有信号中乘一个两端为 0 的窗信号，来减少截断信号时的频谱泄漏\n\n时域分析：\n\n语音的能量随时间的变化较快，比如能量小的时候可能就是没有在说话，而能量大的地方可能是语音中重读的地方，可以通过**短时能量**判断语音的起止位置或者韵律\n\n$$\nE_n=\\sum_{m=-\\infty}^{\\infty}\\left[x(m)w(n-m)\\right]^2\n$$\n\n第 n 个点的短时能量 En​ 就是由加窗后的采样信号的平方和来表示的\n\n短时平均过零率指的是每帧内信号通过零值的次数，背景噪声较小的情况下，短时能量比较准确；但当背景噪声比较大时，短时平均过零率有较好的效果\n\n频域分析：\n\n通过将语音信号进行短时傅里叶变换，将短时傅里叶变换的结果对复数频域信号求模，并取对数转换成分贝（dB），然后用热力图的形式展示出来，就是频谱图了\n\n人耳对以 Hz 为单位的频率并不是很敏感，梅尔谱三角滤波器组把频率划分成了若干个频段。敏感的频段滤波器分布比较密集，而不敏感的频段比较稀疏，这样就能更好地表征人耳的实际听\n\n这两种方法更能反映人耳的真实听感\n\n## 音乐信号\n\n一首曲子的节奏是由速度和节拍决定的，速度以BPM表示。\n\n节拍用来描述音乐中的进程的规律，指有一定强弱分别的一系列拍子，在每隔一定时间重复出现。若干个这样有规律的拍子叫一个小节\n\n乐器的演奏其实就是按照节拍规定的音符演奏顺序，然后按照指定的速度演奏出来\n\n唱名|do|re|mi|fa|So|la|ti|do\n-|-|-|-|-|-|-|-|-\n音名|C4|D4|E4|F4|G4|A4|B4|C5\n基频频率(Hz)|261.6|293.7|329.6|349.2|392.0|440.0|493.9|523.2\n\n## 音频评价\n\n### 主观评价\n\n- MUSHRA（Multi-Stimulus Test with Hidden Reference and Anchor，多激励隐藏参考基准测试方法）：在测试语料中混入无损音源作为参考（上限），全损音源作为锚点（下限），通过双盲听测试，对待测音源和隐藏参考音源与锚点进行主观评分\n\n### 客观评价\n\n- 有参考质量评价：PESQ、POLQA\n- 无参考质量评价：ITU-T P.563、ANIQUE+、E-model、ITU-T P.1201\n\n## 音频降噪\n\n- 加性噪声：由噪声和源信号相加得到的，信号和噪声是不相关的。又可以按照噪声是否平稳，分为稳态噪声和非稳态噪声\n- 乘性噪声：噪声和信号是相关联的，比如信号的衰减、房间的混响、多普勒效应等\n\n### 线性滤波器\n\n事先知道噪声会在哪个频段出现，采用一些比如高通滤波器来消除低频噪声、用一些陷波滤波器来消除某些频段的持续噪声\n\n### 谱减法\n\n先取一段非人声段音频，记录下噪声的频谱能量，然后从所有的音频频谱中减去这个噪声频谱能量\n\n### 基于统计模型的实时降噪算法\n\n利用统计的方法估算出音频频谱中每个频点所对应的噪声和语音的分量，是假设在噪声是比较平稳的情况上\n\n### 子空间算法\n\n针对一些已知噪声类型，量身定做一个降噪算法，把噪声和人声投影到一个高纬度的空间，让本来不容易分离的信号变成在高纬度占据一个可分的子空间，从而可分的信号\n\n### 基于机器学习的降噪\n\n通过数据训练的方式，训练人工神经网络来进行降噪\n\nf(带噪音的音频) = 不带噪音的音频\n\n一般用纯净的语音作为目标或者说标签，然后用纯净语音加入一些噪声生成含噪数据\n\n传统降噪中，维纳滤波等方法，都是通过计算先验信噪比，然后在频域上对每一个频谱的频点都乘以一个小于等于 1 的系数来抑制噪声。这些在频域上乘的系数统称为频域掩码。而如何计算这个频域掩码就成了解决降噪问题的关键\n\n机器学习的任务就是计算出频域掩码\n\n## 回声消除\n\n$$\nz'(n)=f(x(n))-f'(x(n))+y(n)\n$$\n\n- z'(n)：消除了回声的声音\n- x(n)：远端接收到的参考信号\n- f：回声路径的传递函数\n- y(n)：近端声音\n\n回声消除算法的目的就是通过算法估计出回声路径的传递函数f\n\n### 自适应滤波器\n\n用实时更新的滤波器的系数来模拟真实场景的回声路径，然后结合远端信号来估计出回声信号，再从近端采集的混合信号中减去估计的回声，从而达到消除回声的目的\n\n- 最小均方算法 LMS（Least Mean Square）\n- NLMS\n\n## 网络传输\n\n### 编解码器\n\n```mermaid\nmindmap\n  root((音频编解码器常见指标))\n    码率\n    音质\n    主观听感\n      采样率\n      采样位深\n      通道数\n    计算复杂度\n      编码耗时\n      解码耗时\n    延迟\n      算法延迟\n      一包多帧\n```\n\n![不同编解码器的性能表现](/assets/20231128195837.webp)\n\n- 语音编解码器：对语音的发声来建模进行编解码\n- 音乐编解码器：从听得清晰的角度利用心理听觉来进行编码，人耳更敏感的频带需要多耗费一些码率来编码，不敏感的则少耗费一些码率\n\n### 弱网对抗\n\n- FEC（Forward Error Correction）：发送端通过信道编码和发送冗余信息，而接收端检测丢包，以更高的信道带宽作为恢复丢包的开销\n- ARQ（Automatic Repeat-reQuest）：类似于 TCP 中的请求重传\n\nNetEQ模块：主要包括两个模块：MCU（Micro Control Unit，微控制单元）和 DSP（Digital Signal Prcessing，信号处理单元），通过再 MCU 开辟一个比较大的缓冲区域，让一段时间内到来的数据包进行存储排序，再交给解码器进行解码\n\n## 空间音频\n\n![](/assets/20231129192647.webp)\n\n人耳的耳廓在接收不同方向的音源时，会让声波以不同的路径传导至内耳。这样，不同方向的声波传输到内耳的时候，音色就会由于耳廓的形状而产生各向异性\n\n![](/assets/2023112919271.webp)\n\n如果音源在你的左侧，那么左耳会先接收到声波；相反如果音源在右侧，右耳会先收到声音。同时由于人的头部也会对声音的传播产生影响，如果音源在左侧，那么声波需要越过头部这个“障碍”才能传递到右耳，那么相对于左耳，音色和能量可能都会有所衰减\n\n这是空间音频里常说的“双耳效应”，即依靠双耳间的音量差、时间差和音色差来判别声音方位的效应\n\n人耳对距离的感知是相对的。比如声音播放时音量由小变大，我们会感觉声音在靠近\n\n![不同频率的声波空气衰减曲线](/assets/20231129193112.webp)\n\n### 空间音频的采集\n\n- 人工头：通过仿生模型，构建人头和耳廓、耳道等部位，然后通过人工头上的人工耳中内置的麦克风来采集空间音频\n- 入耳式麦克风：直接把左右耳道接收到的音频给录下来\n- Ambisonics：把整个空间的声场都录下来，从而在回放的时候，你可以转动自己的头聆听任意方向的声音，那么就需要另一套叫做高保真度立体声像复制（Ambisonics）的技术\n\n### 空间音频的播放\n\n- 用耳机来还原空间音频相对比较准确\n\n### HRTF\n\n预先把空间中不同位置声源的空间传递函数都测量并记录下来，然后利用这个空间传递函数，我们只需要有一个普通的单声道音频以及这个音源和听音者所在虚拟空间中的位置信息，就可以用预先采集好的空间传递函数来渲染出左右耳的声音\n\n## 音频特效\n\n- 变调：变调其实就是要改变基频，而基频的本质是一个信号的循环周期的倒数，变调其实就是把这个循环周期进行扩大或者缩小\n- 均衡器：一组滤波器，比如常见的高通、低通、带通、带阻等\n- 混响\n\n## 音频AI\n\n- ASR（Automatic Speech Recognition）：将语音转为信号序列，根据特征序列推断出对应的音素序列，最后再转为文本。\n  - 为了实现比较准确的 ASR 系统，需要构建两个主要的模型：声学模型（Acoustic Model）和语言模型（Language model）。然后通过语言解码器和搜索算法（Ligusitic Decoding and search algorithm），结合声学模型和语言模型的结果，综合选择出概率最大的文字序列作为识别的输出\n- TTS（Text To Speech）：通过一个模型把文字转为语音的特征向量，再使用声码器（Vocoder）把语音特征转换为音频信号\n- VPR（Voice Print Recognition）：把说话人的声音特点编码成固定长度的向量（SpeakerEmbeding）\n\n","metadata":"","hasMoreCommit":false,"totalCommits":8,"commitList":[{"date":"2025-09-21T14:03:43+08:00","author":"MY","message":"docs(mindmap): 统一思维导图根节点格式","hash":"44fc90fa0f22040d171dbf83cd6f2fd8c020444a"},{"date":"2023-11-30T19:43:09+08:00","author":"MY","message":"✏音频技术","hash":"5c07599dabd06befbfde41c7fb2d5a841fa59874"},{"date":"2023-11-29T19:46:37+08:00","author":"MY","message":"✏音频技术","hash":"40a234c806d7cfe00638796c2725eff7918b856a"},{"date":"2023-11-28T20:09:07+08:00","author":"MY","message":"✏音频技术","hash":"f4a1ec109e545c29bc06d52a2eabc07430ea1082"},{"date":"2023-11-27T20:03:45+08:00","author":"MY","message":"✏音频技术","hash":"5d143de9a0cc3e6b0c651de31a0e06ef7f55c5f7"},{"date":"2023-11-26T16:33:24+08:00","author":"MY","message":"✏️音频技术","hash":"6a0c70f0cbc2b8dc3fb194c6a343a703fd4a467e"},{"date":"2023-11-24T17:15:02+08:00","author":"MY","message":"✏音频技术","hash":"e19d295faa4a937145c61eedd874f030aa03ff8e"},{"date":"2023-11-23T17:12:20+08:00","author":"MY","message":"➕音频技术","hash":"9b239a09fe35f1f3822ab10bb5602abcc75994a2"}],"createTime":"2023-11-23T17:12:20+08:00"}